{
  "subreddit": "Terraform",
  "url": "https://www.reddit.com/r/Terraform",
  "meta": {
    "title": "Terraform"
  },
  "posts": [
    {
      "title": "Questions about DNS swap-over for Blue-Green deployments",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1n4zx8q/questions_about_dns_swapover_for_bluegreen/",
      "score": 1,
      "comments": 6,
      "post_id": "t3_1n4zx8q",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "kassett238",
      "author_id": "t2_mzffafwhs",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-31T16:59:38.863000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1n4zx8q/questions_about_dns_swapover_for_bluegreen/",
      "content_preview": "I would appreciate some help trying to architect a system for blue-green deployments. I'm sorry if this is totally a noob question. I have a domain managed in Cloudflare: example.com. I then have some Route53 hosted zones in AWS: external.example.com and internal.example.com. I use Istio and External DNS in my EKS cluster to route traffic. Each cluster has a hosted zone on top of external.example.com: cluster-name.external.example.com. It has a wildcard certificate for *.cluster-name.external.example.com. When I create a VirtualService for hello.cluster-name.external.example.com, I see a Route53 record in the cluster's hosted zone. I can navigate to that domain using TLS and get a response. I am trying to architect a method for doing blue-green deployments. Ideally, I would have both clusters managed using Terraform only responsible for their own hosted zones, and then some missing piece of the puzzle that has a specific record: say app.example.com , that I could use to delegate traffic to each of the specific virtual services in the cluster based on weight: module.cluster1 {\n  cluster_zone = \"cluster1.external.example.com\"\n}\n\nmodule.cluster2 {\n  cluster_zone = \"cluster2.external.example.com\"\n}\n\nmodule \"blue_green_deploy\" {\n  \"app.example.com\" = {\n    \"app.cluster1.external.example.com\" = 0.5\n    \"app.cluster2.external.example.com\" = 0.5\n   }\n} The problem I am running into is that I cannot just route traffic from app.example.com to any of the clusters because the certificate for app.cluster-name.external.example.com will not match the certificate for app.example.com. What are my options here? Can I just add an alias to each ACM certificate for *.example.com, and then any route hosted in the cluster zone would also sign for the top level domain? I tried doing that but I got an error that no record in Route53 matches *.example.com. I don't really want to create a record that matches *.example.com, as I don't know how that would affect the other <something>.example.com records. Can I use a Cloudflare load balancer to balance between the two domains? I tried doing this but the top-level domain just hangs forever: hello.example.com never responds.",
      "flair": [
        "AWS"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_0.png"
    },
    {
      "title": "I built a VS Code extension that caught a $140,000/year AWS mistake in my Terraform config",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1n27eqd/i_built_a_vs_code_extension_that_caught_a/",
      "score": 222,
      "comments": 48,
      "post_id": "t3_1n27eqd",
      "post_type": "multi_media",
      "domain": "self.Terraform",
      "author": "Due-Butterscotch3631",
      "author_id": "t2_1wlrc8wvrg",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-28T09:16:25.339000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1n27eqd/i_built_a_vs_code_extension_that_caught_a/",
      "content_preview": "Hey everyone! Last week I was reviewing some Terraform configs and realized I'd accidentally specced production instances that would cost $140,000/year more than intended (used m5.24xlarge instead of spot instances). Caught it manually, but it got me thinking - why don't we see costs WHILE writing infrastructure code? So I spent a weekend building a VS Code extension that shows AWS costs directly in your editor as you type. Here's what it does: Shows inline cost hints (like t3.medium → $29.95/mo ) Calculates total monthly costs in the status bar Works with YOUR actual AWS prices (including enterprise discounts) 100% local - no AWS credentials or API keys needed Supports both Terraform and CloudFormation https://preview.redd.it/i-built-a-vs-code-extension-that-caught-a-140-000-year-aws-v0-p0v3j2jw8qlf1.png https://preview.redd.it/i-built-a-vs-code-extension-that-caught-a-140-000-year-aws-v0-3wuca5vt8qlf1.png The twist: Instead of dealing with AWS's complex pricing APIs, you just drop in a simple JSON file with your prices. Takes 2 minutes to set up, and you can share price configs with your team. Would love to hear what features would make this more useful for your team. What's the most expensive AWS mistake you've caught (or missed)? https://marketplace.visualstudio.com/items?itemName=Vahmoh111.cloud-cost-calculator",
      "flair": [],
      "thumbnail_url": "https://styles.redditmedia.com/t5_facogn/styles/profileIcon_cug6k7zfkplf1.jpeg?width=64&height=64&frame=1&auto=webp&crop=64%3A64%2Csmart&s=22d7ff475c714e7c1229569250e379dfd50970ed"
    },
    {
      "title": "New custom (recent) OpenVPN with SFTPGo (web interfaces behind vpn)",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1n3q1yc/new_custom_recent_openvpn_with_sftpgo_web/",
      "score": 4,
      "comments": 1,
      "post_id": "t3_1n3q1yc",
      "post_type": "multi_media",
      "domain": "self.Terraform",
      "author": "International-Ad2125",
      "author_id": "t2_6cwa8m9t",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-30T02:16:21.385000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1n3q1yc/new_custom_recent_openvpn_with_sftpgo_web/",
      "content_preview": "I have created my first nice (imo) terraform for setting up an openvpn community container with a secure sfptgo instance behind it. This is great for anyone that wants their own vpn setup without connection limits. So now you can easily deploy your own secure network and file share solution. Sftp go handles webdav and even smb if you want. This solution does not yet handle Route 53 or any other DNS option nor does it handle persisting the SFTPGo certs that are generated on container start. That stuff is coming but this setup is still fully usable as is with static IPs. https://github.com/cavebatsofware/openvpn-sftp",
      "flair": [
        "AWS"
      ],
      "thumbnail_url": ""
    },
    {
      "title": "Infragram: C4 style architecture diagrams for Terraform",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mk3f7c/infragram_c4_style_architecture_diagrams_for/",
      "score": 67,
      "comments": 19,
      "post_id": "t3_1mk3f7c",
      "post_type": "multi_media",
      "domain": "self.Terraform",
      "author": "Last-Researcher-6663",
      "author_id": "t2_1u2rcj0x65",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-07T15:38:56.507000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mk3f7c/infragram_c4_style_architecture_diagrams_for/",
      "content_preview": "Hello everyone, I'm working on Infragram , an architecture diagram generator for terraform. I thought to share it here and gather some early feedback from the community. It's packaged as a vscode extension you can install from the marketplace. Once installed, you can simply hit generate diagram from any terraform workspace to load up the diagram. It runs completely offline, your code never leaves your machine. The diagrams are interactive and allow you to zoom in and out to see varying levels of detail for your infrastructure, a la the C4 Model . I've put together a quick video to demo the concept, if you please. You can also see these sample images 1 , 2 , 3 , 4 to get an idea of what the diagrams look like. Do check it out and share your feedback, would love to hear your thoughts on this.",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_5.png"
    },
    {
      "title": "Recreate state for bulk resources (all of them)",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1n2yzhk/recreate_state_for_bulk_resources_all_of_them/",
      "score": 8,
      "comments": 12,
      "post_id": "t3_1n2yzhk",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "EconomistAnxious5913",
      "author_id": "t2_zy6jiv38q",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-29T05:29:07.480000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1n2yzhk/recreate_state_for_bulk_resources_all_of_them/",
      "content_preview": "I'm sure the answer to this is no, but is there a way to recreate state from Infra existing on AWS. I know import 1 by 1 works, but I have a lot, The earlier dev created a local state, not a remote one, and now I'm stuck to modify anything. I have things like this terraform import -var-file=terraform.dev.tfvars module.feature_processing_ecr.aws_ecr_repository.capturing-v1 capturing-dev but, can't do it 1 by1 for all of them. Any ideas would be appreciated. Thanks",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_2.png"
    },
    {
      "title": "Mobile swipable HashiCorp Terraform Associate (003) cheat sheet",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1n4i589/mobile_swipable_hashicorp_terraform_associate_003/",
      "score": 18,
      "comments": 1,
      "post_id": "t3_1n4i589",
      "post_type": "multi_media",
      "domain": "self.Terraform",
      "author": "Ok_Supermarket_234",
      "author_id": "t2_45add95ct",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-31T01:26:58.388000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1n4i589/mobile_swipable_hashicorp_terraform_associate_003/",
      "content_preview": "Hi, I have created a free mobile swipable cheat sheet for HashiCorp Terraform Associate (003) certification (no login required) covering all the modules in detail. Hope it will be useful to anybody preparing for this certification. Please try and let me know your feedback or any topic that may be missing. https://preview.redd.it/mobile-swipable-hashicorp-terraform-associate-003-cheat-v0-rgsuh3i1c9mf1.png I have also created over 500 practice tests (but requires login and there is daily limit).",
      "flair": [
        "Tutorial"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_5.png"
    },
    {
      "title": "AWS Secrets Manager Secret Names/Ids",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1n2028s/aws_secrets_manager_secret_namesids/",
      "score": 1,
      "comments": 3,
      "post_id": "t3_1n2028s",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "HappyUnicorns789",
      "author_id": "t2_8a97pew1",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-28T02:07:02.485000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1n2028s/aws_secrets_manager_secret_namesids/",
      "content_preview": "I know they map to the actual secret value in secrets manager, but should I be hiding the secret name/id? I’m storing them as terraform workspace variables and there’s an option to store them as sensitive variables. Is there a best practice on this whether or not to store them as sensitive?",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_1.png"
    },
    {
      "title": "What are TACOS missing today?",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1n39dzk/what_are_tacos_missing_today/",
      "score": 0,
      "comments": 31,
      "post_id": "t3_1n39dzk",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "AdSmooth8991",
      "author_id": "t2_196nqv3tqi",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-29T14:45:35.827000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1n39dzk/what_are_tacos_missing_today/",
      "content_preview": "This is a bit of a long one, and this is NOT PROMOTIONAL. I read this linkedin post yesterday and nodded (yes) quite a bit. I am a TACOS vendor, staying anonymous to eliminate bias (both while writing this post and in the responses), so I thought I’d start this thread to benefit us all, to possibly learn what's missing/what we can be doing better. We’ve had “ bake-offs ” in the past, but they’re a bit dated. So lets start with tooling in the market, for each tool I’m linking relevant links on current customer sentiment/company developments/product: In the fully fledged TACOS land, here are the leaders: Spacelift: By and large THE LEADER in the market. Recently released “ Saturnhead AI ”, most users swear by the tool, but are annoyed on pricing [ 1 ], [ 2 ]. Turns out it’s still a better deal than TFC . Scalr: Battle tested, used by the likes of mastercard, peloton et al. (I swear at some point I remember reading that NASA used Scalr but I can’t find the article). They recently also introduced a pricing change. Env0: Don’t see/hear much from them (neither good nor bad), maybe users using them can weigh in? (The do have a swanky new site though!). One of the early one’s in the space, have a rich set of features, used by MongoDB, Western Union et al. Terrakube (Free + OSS): Built as a fully fledged alternative to TFE, a clean, minimal UI with RBAC, SSO etc. Don’t see users raving about it like they do about atlantis though, although technically, it’s kinda more feature rich,. Unsure why? OTF (Free + OSS): In their own words “ OTF is an open source alternative to Terraform Enterprise. Includes SSO, team management, agents, and no per-resource pricing.” And of course Terraform Cloud/Enterprise. For PR automation, there are 3 tools that seem to be preferred: Folks primarily use these tools in small to medium setups, migrating to fully fledged TACOS mentioned above when they hit scale constraints. Atlantis (OSS, community maintained): This 2024 survey stated what’s missing there. Digger (OSS, company maintained): Raised a seed round recently, their website mentions some AI stuff, seems similar to atlantis but folks can use a github app. Terrateam (OSS, company maintained): Seem to have gained a fair amount of momentum, also relased an infracost competitor (?) Some questions that are actually helpful for all vendors: Firstly, if you are on TFC, are you ok? Which tool do you currently use, whats good/bad, what would you change and why? If pricing clearly has hit a nerve, why then are folks not moving to Terrakube and OTF? What’s missing there? If you’re in Atlantis/Digger/Terrateam land, and are opinionatedly “apply before merge”, what are the scale constraints that you’re actually seeing? (I know vendors will pitch problems, but I am keen to hear it from a users POV) This one is bit of a wildcard, but is there something that’d you’d change fundamentally in how these tools work today? Thanks! And I’d encourage fellow vendors to engage and not promote below, it helps us more this way, and feel free to add any question y’all may have.",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": ""
    },
    {
      "title": "Terraform v1.13.0 is out today, see link for changes",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mvmm0s/terraform_v1130_is_out_today_see_link_for_changes/",
      "score": 48,
      "comments": 19,
      "post_id": "t3_1mvmm0s",
      "post_type": "link",
      "domain": "github.com",
      "author": "StuffedWithNails",
      "author_id": "t2_hy7xb",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-20T18:13:15.091000+0000",
      "content_href": "https://github.com/hashicorp/terraform/releases/tag/v1.13.0",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://external-preview.redd.it/z-OgHaC8R7aXO5x9IkA6kPPOiuQSvp6VGsvuHzStJZg.png?width=140&height=70&crop=140:70,smart&auto=webp&s=e0580eab3abef49edccc9ff4e48c3fa9db7a72b2"
    },
    {
      "title": "3 Tier Application",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1myu6gu/3_tier_application/",
      "score": 5,
      "comments": 6,
      "post_id": "t3_1myu6gu",
      "post_type": "multi_media",
      "domain": "self.Terraform",
      "author": "Distinct-Captain5834",
      "author_id": "t2_ba1633p1",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-24T12:23:09.555000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1myu6gu/3_tier_application/",
      "content_preview": "I have build 3 tier aws web application using terraform i break them into frontend, backend, and rds, frontend is in public subnet, and other 2 are in private subnet but issue is i want backend to have a internet connectivity using gateway but nat gateway is not free in free tier, i want suggestion what should i use? This is my current code https://github.com/MrHTD/Terraform-AWS-3-Tier-Web-App",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_5.png"
    },
    {
      "title": "Terraform Professional vs CKA",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1n0cwou/terraform_professional_vs_cka/",
      "score": 15,
      "comments": 3,
      "post_id": "t3_1n0cwou",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "axolotl_49",
      "author_id": "t2_884e54xmo",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-26T04:54:50.867000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1n0cwou/terraform_professional_vs_cka/",
      "content_preview": "I have a cert in CKA after having job experience in kubernetes of 5 months, and I almost didn't have a hard time with the exam with almost answering all the scenarios. I plan to take the Terraform Authoring and Operations Professional exam by the end of this year. But I'm only starting my job experience with Terraform now. I know they have different exam durations (2 hrs vs 4 hrs), and given that I didn't have a hard time on CKA exam, will I have a difficult time in the Terraform Exam? Asking of perspectives mainly from one's that did both exam, others are welcome as well.",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_0.png"
    },
    {
      "title": "Assistance Needed for Creating cp.certmetrics Account as Underage Candidate",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mys78j/assistance_needed_for_creating_cpcertmetrics/",
      "score": 1,
      "comments": 7,
      "post_id": "t3_1mys78j",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "Leather_Deal6585",
      "author_id": "t2_1u8v61purf",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-24T10:34:52.452000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mys78j/assistance_needed_for_creating_cpcertmetrics/",
      "content_preview": "I am writing to ask for guidance regarding registering for the HashiCorp Terraform Associate exam as an underage candidate. I am 16 years old and ready to take the exam, but I am unable to create a cp.certmetrics account to schedule it. I could not find any documentation about the proper procedure for candidates under 18, can anyone tell me what can i do?",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": ""
    },
    {
      "title": "Terraform File Structure",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1n0ro5a/terraform_file_structure/",
      "score": 11,
      "comments": 6,
      "post_id": "t3_1n0ro5a",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "Technical-Praline-79",
      "author_id": "t2_8wky6n23",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-26T17:10:04.091000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1n0ro5a/terraform_file_structure/",
      "content_preview": "So I've decided to deploy my new project using only Terraform come hell or high water. IT's nothing complicated, but given that I've never done any of this before I'm looking forward to it and hoping to learn quite a bit. I do need a little help though, specifically on the file structure, the purpose of each of the files, and how I essentially end up building modular instead of just having a monolith of a script, if that makes sense. Can anyone recommend any resources/video/blog/etc. that explain these things like I'm 5?",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_3.png"
    },
    {
      "title": "Terraform for application deploys",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mxpxp7/terraform_for_application_deploys/",
      "score": 6,
      "comments": 19,
      "post_id": "t3_1mxpxp7",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "PappyPoobah",
      "author_id": "t2_9v9r5",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-23T02:40:34.438000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mxpxp7/terraform_for_application_deploys/",
      "content_preview": "My company is looking to upgrade our infrastructure deployment platform and we’re evaluating Terraform. We currently deploy applications onto EC2 via a pipeline that takes a new build, bakes it into an AMI, and then deploys a fresh ASG with that AMI. Typical app infrastructure includes the ASG, an ELB, and a Security Group, with the ELB and SG created via a separate pipeline once before all future ASG deployments that use them. We have a custom orchestration system that triggers these pipelines in various environments (test/staging/prod) and AWS regions. App owners currently configure everything in YAML that we then gitops into the pipelines above. We’re looking to replace the AWS infrastructure parts of our YAML with HCL and then use Terraform as the deployment engine to replace our custom system, retaining the orchestration system in between our users and the Terraform CLI. I realize our current deployment system is somewhat archaic but we can’t easily move to k8s or something like Packer so we’re looking at interim solutions to simplify things. Has anyone used Terraform to deploy apps in this way? What are the pros/cons of doing so? Any advice as we go down this road?",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_1.png"
    },
    {
      "title": "What's your handoff between terraform and k8s?",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mtkqz3/whats_your_handoff_between_terraform_and_k8s/",
      "score": 26,
      "comments": 28,
      "post_id": "t3_1mtkqz3",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "aburger",
      "author_id": "t2_4dglt",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-18T12:33:48.960000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mtkqz3/whats_your_handoff_between_terraform_and_k8s/",
      "content_preview": "I'm curious where everybody's terraform ends and other parts of the pipeline begin. For our shop (eks in aws) there's a whole lot of gray area and overlap between helm via terraform provider and helm via ArgoCD. Historically we were (and still are, tbh) a very terraform heavy shop. We're new to argo so a lot of things that probably should be there just aren't yet. Our terraform is generally sound but, for a handful of workspaces, a gross mix of providers and huge dependencies: aws, helm, kubernetes, and I think we're on our third vendored kubectl provider, all just to get eks up and ready for app deployments. Plus a few community modules, which tend to make my blood boil. But I digress... As you can probably tell, this been in the back of my mind for a while now, because eventually we'll need to do a lot of porting for maintainability. Where do you draw the line, if you're able to draw a well defined one? In chicken/egg situations where argo/flux/etc can manage something like your helm deploy for Karpenter or Cluster Autoscaler, but Karpenter needs to exist before Argo even has nodes to run on, what are you doing and how's it working out for you? Terraform it and keep it there, just knowing that \"helm deploys for A, B, and C are in this thing, but helm deploys for D-Z are over in this other thing,\" or do you initialize with terraform and backport to something that comes up further down the pipeline? I'm trying to figure out what kind of position to try to be in a couple years from now, so hit me your best shot. What do you do? How do you like it? What would you change about it? How did your team(s) try to do it, fail to consider, and what did you learn from it? Imagine you get to live all of our dreams and start from scratch : what's that look like?",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_1.png"
    },
    {
      "title": "Help - Terraform + GH Actions + Cloudflare",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mxd6oz/help_terraform_gh_actions_cloudflare/",
      "score": 5,
      "comments": 4,
      "post_id": "t3_1mxd6oz",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "Swimmm3r",
      "author_id": "t2_umeo3",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-22T17:43:44.104000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mxd6oz/help_terraform_gh_actions_cloudflare/",
      "content_preview": "Hello all, Trying to automate a way to have my Cloudflare DNS updated automatically due to dynamic IPS. # Goal The goal is to have a GitHub Action that can be triggered every 30m, that will run the action in a local runner. I was thinking on using Terraform Cloud to serve as state backend but the issue is when I use a local-exec, curling the IP, the information I'm getting is the IP of Terraform Cloud and not my local runner. I'm open to solutions",
      "flair": [
        "Help Wanted"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_3.png"
    },
    {
      "title": "Did anyone face the same issue with cdktf? If yes, did you find any fix/workaround for it?",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1n34wkq/did_anyone_face_the_same_issue_with_cdktf_if_yes/",
      "score": 1,
      "comments": 12,
      "post_id": "t3_1n34wkq",
      "post_type": "link",
      "domain": "github.com",
      "author": "rama_rahul",
      "author_id": "t2_t5x13d2",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-29T11:31:20.849000+0000",
      "content_href": "https://github.com/hashicorp/terraform-cdk/issues/3896",
      "content_preview": "",
      "flair": [
        "Help Wanted"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_6.png"
    },
    {
      "title": "Can a noob with no DevOps experience set up Terraform?",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mzyxkw/can_a_noob_with_no_devops_experience_set_up/",
      "score": 19,
      "comments": 23,
      "post_id": "t3_1mzyxkw",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "Popular_Armadillo608",
      "author_id": "t2_1se1o589wj",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-25T18:43:51.486000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mzyxkw/can_a_noob_with_no_devops_experience_set_up/",
      "content_preview": "I am a junior developer at my current company which has no DevOps what so ever. Someone has to manually push code to QA, we don't have automated CI/CD pipelines etc. Before my manager left, he left a bunch of tickets outline the work we need to do to be able to modernize our code flow. One ticket was adopting Terraform. I feel this taking on this ticket will def benefit my skills and adding it to my resume would be a big plus. Now my question is, am I biting on something more than i can chew? This ticket would have to be broken down into smaller ticket. BUT can someone who doesn't know squat of Terraform or DevOps do this?",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_3.png"
    },
    {
      "title": "Terraform Experience",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1n2h5hq/terraform_experience/",
      "score": 8,
      "comments": 6,
      "post_id": "t3_1n2h5hq",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "Borealis_761",
      "author_id": "t2_l90g5004",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-28T16:34:56.800000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1n2h5hq/terraform_experience/",
      "content_preview": "I am a network engineer and lately I've noticed a lot of companies that are hiring needs Terraform experience for some reason. I would like to know for someone with limited Python background where should I start to gain some experience with Terraform.",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_4.png"
    },
    {
      "title": "Managing Proxmox with Terraform and GitLab Runner",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mxqts9/managing_proxmox_with_terraform_and_gitlab_runner/",
      "score": 15,
      "comments": 0,
      "post_id": "t3_1mxqts9",
      "post_type": "crosspost",
      "domain": "i.redd.it",
      "author": "nix-solves-that-2317",
      "author_id": "t2_1vbtejzjyc",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-23T03:26:58.645000+0000",
      "content_href": "/r/gitlab/comments/1mocrcp/managing_proxmox_with_gitlab_runner/",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://styles.redditmedia.com/t5_f4uf6f/styles/profileIcon_kfh3sfo7bmif1.jpg?width=64&height=64&frame=1&auto=webp&crop=64%3A64%2Csmart&s=8b1e71428f0b94064e24cebc56b09cf56c5c25cc"
    },
    {
      "title": "Hub and Spoke Deployment - How to structure repos/state files?",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1n1dex8/hub_and_spoke_deployment_how_to_structure/",
      "score": 4,
      "comments": 5,
      "post_id": "t3_1n1dex8",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "Icy_Combination3594",
      "author_id": "t2_evwnig2u",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-27T10:32:50.254000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1n1dex8/hub_and_spoke_deployment_how_to_structure/",
      "content_preview": "I'm looking to convert our Bicep deployment to Terraform. We run a medium sized \"enterprise-scale\" landing zone with Platform subs for Connectivity, Identity, Management. We also have a single Production sub for our workloads. This is all internal to our organisation. No dev/QA environments so far, but they may pop up in the future. We have a team of 4 managing the Azure platform. Less than 100 VMs, handful of storage accounts, key vaults, and SQL servers. Each subscription contains a vNET in our primary region, and a mostly identical vNET in the paired secondary region for DR. Second region is passive to save cost - vNETs, PIPs, Firewall Policies, etc. are provisioned, but Azure Firewall is not online, would be deployed via TF when needed using dedicated pipeline, switching on a variable. I've come up against a few roadblocks and have found potential solutions that suit our team/estate size. I'd like to verify that I'm using best/reasonable practice, any assistance is much appreciated. 1. How many repos do I need? I'd like to keep the number of repos we're managing to a minimum without creating a giant blast radius. Current thinking is 1 repo for common modules (with semantic path-based versioning i.e. module/nsg/v1.2.0), 1 repo for platform (connectivity/identity/management), 1 repo for production. 2. How many state files do I need? Each repo would deploy to 2 states, one for each region. (Reasoning is so we can modify resources in one region while the other is down in a DR scenario, without getting errors) 3. How do I share common values (like CIDR ranges of our on-prem subnets) with all of these deployments? Storing these in the common repo seems like an option. Either as a static file, or as a module that produces them as an output? That module can then be versioned as those common values are updated, allowing downstream consumers of that module to choose when to use the latest values.",
      "flair": [
        "Azure"
      ],
      "thumbnail_url": ""
    },
    {
      "title": "How to make child module inherit non-hashicorp provider from root",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mwx2u7/how_to_make_child_module_inherit_nonhashicorp/",
      "score": 2,
      "comments": 2,
      "post_id": "t3_1mwx2u7",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "ryuzaki_1007",
      "author_id": "t2_1fdruidln9",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-22T04:35:34.216000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mwx2u7/how_to_make_child_module_inherit_nonhashicorp/",
      "content_preview": "I have a custom terraform provider that I wanna use, which is defined in \"abc\" namespace. I have placed my required_providers in my root directory specifying the source. But when I run terraform init, it still tries to imports the provider from both \"abc\" & \"hashicorp\" source. How can we make it not look for \"hashicorp\"? This is probably coming from a child module, where I have not defined required_providers. Once I do it there, the error goes away. How can I make it inherit from root provider?",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_5.png"
    },
    {
      "title": "Validate *changes* in resource state?",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1n27pr1/validate_changes_in_resource_state/",
      "score": 1,
      "comments": 1,
      "post_id": "t3_1n27pr1",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "wendellg",
      "author_id": "t2_8fxj8",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-28T09:36:02.740000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1n27pr1/validate_changes_in_resource_state/",
      "content_preview": "Is it possible to use some sort of check or precondition to validate that a resource change is valid (i.e. not just check the final state of the resource, but the change itself)?  What I want to do is validate that the upgrade of a Kubernetes operator isn't skipping versions, so I have a list of supported versions in upgrade order -- I can use the chart version of the Helm release as the attribute to validate against, and I think I have the comparison logic figured out, but I can't suss out how to actually validate the change in value of the version attribute of the helm_release resource. To give a concrete example, if I have this list of versions: [\"1.17.2\", \"1.18.0\", \"1.19.1\", \"1.20.1\", \"1.21.0\"] ...and the current deployed version of the chart is 1.19.1, I want to allow upgrading the release to only 1.20.1.  Once that's been done successfully, I then want to allow upgrading to only version 1.21.0.  (Etc.)  I also want to block changes if the current or target chart version is not in the supported version list.",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://styles.redditmedia.com/t5_dogwt/styles/profileIcon_zi7tubfel92e1.jpg?width=64&height=64&frame=1&auto=webp&crop=64%3A64%2Csmart&s=9c9e2fa0874c2e0728ee9237afdd7c218c213a55"
    },
    {
      "title": "What if Terraform Cloud did not have any runners?",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mvsjs6/what_if_terraform_cloud_did_not_have_any_runners/",
      "score": 3,
      "comments": 7,
      "post_id": "t3_1mvsjs6",
      "post_type": "multi_media",
      "domain": "self.Terraform",
      "author": "izalutski",
      "author_id": "t2_18bgqpbr",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-20T21:51:55.198000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mvsjs6/what_if_terraform_cloud_did_not_have_any_runners/",
      "content_preview": "A somewhat unusual format - 3 min screen recording of nothing but me typing - but I find it much easier to type \"live\" with screen recording. Also proves that it's not AI generated \"content\" for eyeballs or engagement or whatever. Does this even make sense? https://preview.redd.it/1oa6cu6rw8kf1.jpg",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://styles.redditmedia.com/t5_ibioc/styles/profileIcon_4gf85rm9hh361.jpeg?width=64&height=64&frame=1&auto=webp&crop=64%3A64%2Csmart&s=343508dbd5ad8f453af9c32f037e3968bf25b55f"
    },
    {
      "title": "Bridging the Terraform & Kubernetes Gap with Soyplane (Early-Stage Project)",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mvjxaa/bridging_the_terraform_kubernetes_gap_with/",
      "score": 5,
      "comments": 1,
      "post_id": "t3_1mvjxaa",
      "post_type": "multi_media",
      "domain": "self.Terraform",
      "author": "OthElWarr",
      "author_id": "t2_vnf1kbf1",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-20T16:37:42.767000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mvjxaa/bridging_the_terraform_kubernetes_gap_with/",
      "content_preview": "Hey folks, I’ve always felt there’s a bit of a missing link between Terraform and Kubernetes. We often end up running Terraform separately, then feed outputs into K8s Secrets or ConfigMaps. It works, but it’s not exactly seamless. Sure, there’s solutions like Crossplane, which is fantastic but can get pretty heavy if you just want something lightweight or your infra is already all written in Terraform. So in my free time, I started cooking up Soyplane : a small operator that doesn’t reinvent the wheel. It just uses Terraform or OpenTofu as-is and integrates it natively with Kubernetes. Basically, you get to keep your existing modules and just let Soyplane handle running them and outputting directly into K8s Secrets or ConfigMaps. Since it’s an operator using CRDs, you can plug it right into your GitOps setup—whether you’re on Argo CD or Flux. That way, running Terraform can be just another part of your GitOps workflow. Now, this is all still in very early stages . The main reason I’m posting here is to hear what you all think. Is this something you’d find useful? Are there pain points or suggestions you have? Maybe you think it’s redundant or there are better ways to do this—I’m all ears. I just want to shape this into something that actually helps people. Thanks for reading, and I’d love any feedback you’ve got! https://github.com/soyplane-io/soyplane Cheers! EDIT: I reread this post many times since I very rarely post anything—my apologies for any mistakes.",
      "flair": [
        "Announcement"
      ],
      "thumbnail_url": ""
    },
    {
      "title": "How to deal with conflicts in Terraform apply when resources are still being provisioned",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1n0h8a9/how_to_deal_with_conflicts_in_terraform_apply/",
      "score": 2,
      "comments": 13,
      "post_id": "t3_1n0h8a9",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "davletdz",
      "author_id": "t2_hae3u9j2",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-26T09:31:58.971000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1n0h8a9/how_to_deal_with_conflicts_in_terraform_apply/",
      "content_preview": "Let's say we are doing Terraform apply on resources that rely on each other. However from the plan it may be not clear exactly how. During provisioning some resources are still in progress state and terraform fails when it tries to create other resources that depend on it. What are options except having those changes being two separate PRs/deploys. FIY we are using CI/CD with Github Actions that do apply step after PR merged to main.",
      "flair": [
        "Help Wanted"
      ],
      "thumbnail_url": ""
    },
    {
      "title": "AWS API Gateway Stage Variables in Response Parameters",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mv3c4c/aws_api_gateway_stage_variables_in_response/",
      "score": 3,
      "comments": 2,
      "post_id": "t3_1mv3c4c",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "North_Wallaby5871",
      "author_id": "t2_g3sv9dijv",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-20T02:59:54.944000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mv3c4c/aws_api_gateway_stage_variables_in_response/",
      "content_preview": "Hello all, I'm testing ability to use stageVariables in an AWS API Gateway deployment. I'd like to use them for CORS headers. I'm noticing that it seems possible for a response_template api integration response body, but not in api integration response headers with response_parameters. I think this is a stage variable limitation. I've tried a few ways for the response_parameter like $$ , $ , ${} , $${} Has anyone tried this and has input to share? I'm testing this from api gateway ui in test method with stage variables allowed_origin set output: {\"headers\":{\"Access-Control-Allow-Credentials\":\"'true'\",\"Access-Control-Allow-Headers\":\"'Content-Type'\",\"Access-Control-Allow-Methods\":\"POST, OPTIONS\",\"Access-Control-Allow-Origin\":\"https://website.com\"},\"statusCode\":200}\n\n{\n  \"Access-Control-Allow-Credentials\": \"true\",\n  \"Access-Control-Allow-Headers\": \"Content-Type\",\n  \"Access-Control-Allow-Methods\": \"OPTIONS,POST\",\n  \"Access-Control-Allow-Origin\": \"$stageVariables.allowed_origin\",\n  \"Content-Type\": \"application/json\"\n} ``` terraform: resource \"aws_api_gateway_integration_response\" \"auth_options_integration_response\" {\n  rest_api_id   = aws_api_gateway_rest_api.user_data_api.id\n  resource_id   = aws_api_gateway_resource.auth.id\n  http_method   = \"OPTIONS\"\n  status_code   = \"200\"\n  depends_on = [aws_api_gateway_method.auth_options_method] \n\n  response_parameters = {\n    \n\"method.response.header.Access-Control-Allow-Headers\"\n = \"'Content-Type'\"\n    \n\"method.response.header.Access-Control-Allow-Methods\"\n = \"'OPTIONS,POST'\"\n    \n\"method.response.header.Access-Control-Allow-Origin\"\n = \"'$stageVariables.allowed_origin'\"\n    \n\"method.response.header.Access-Control-Allow-Credentials\"\n =  \"'true'\"\n  }\n\n  response_templates = {\n    \n\"application/json\"\n = jsonencode({\n      \nstatusCode\n = 200\n      \nheaders\n = {\n        \n\"Access-Control-Allow-Origin\"\n      = \"$stageVariables.allowed_origin\"\n        \n\"Access-Control-Allow-Methods\"\n     = \"POST, OPTIONS\"\n        \n\"Access-Control-Allow-Headers\"\n     = \"'Content-Type'\"\n        \n\"Access-Control-Allow-Credentials\"\n = \"'true'\" # Client expects string\n      }\n    })\n  }\n}\n``` ```",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": ""
    },
    {
      "title": "Beginner question",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1n1ij78/beginner_question/",
      "score": 2,
      "comments": 3,
      "post_id": "t3_1n1ij78",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "atqifja",
      "author_id": "t2_168txo",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-27T14:26:38.455000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1n1ij78/beginner_question/",
      "content_preview": "Is it possible to use for_each and count.index inside the same resource This is my resource resource \"azurerm_windows_virtual_machine\" \"avd_vm\" {\n  for_each              = var.virtual_machines\n  name                  = \"${var.prefix}-${count.index + 1}\"\n  resource_group_name   = azurerm_resource_group.rg.name\n  location              = azurerm_resource_group.rg.location\n  size                  = var.vm_size\n  network_interface_ids = [\"${azurerm_network_interface.avd_vm_nic.*.id[count.index]}\"]\n  provision_vm_agent    = true\n  admin_username        = var.local_admin_username\n  admin_password        = var.local_admin_password\n\n  os_disk {\n    name                 = \"${lower(var.prefix)}-${count.index + 1}\"\n    caching              = \"ReadWrite\"\n    storage_account_type = \"Standard_LRS\"\n  }\n\n  source_image_reference {\n    publisher = \"MicrosoftWindowsDesktop\"\n    offer     = \"Windows-10\"\n    sku       = \"20h2-evd\"\n    version   = \"latest\"\n  }\n\n  depends_on = [\n    azurerm_resource_group.rg,\n    azurerm_network_interface.avd_vm_nic\n  ]\n}",
      "flair": [
        "Azure"
      ],
      "thumbnail_url": ""
    },
    {
      "title": "Terraform keeps on updating my ElasticBeanstalk",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1n1k2rh/terraform_keeps_on_updating_my_elasticbeanstalk/",
      "score": 0,
      "comments": 4,
      "post_id": "t3_1n1k2rh",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "RecognitionSea6978",
      "author_id": "t2_1wjxd86ax8",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-27T15:24:49.337000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1n1k2rh/terraform_keeps_on_updating_my_elasticbeanstalk/",
      "content_preview": "Hi, I have been puzzled these past few days with my terraform setting up elastic beanstalk. I was able to successfully applied the terraform elastic beanstalk but the issue is after the apply is done, doing terraform plan makes it want to change something from the EB. No matter how many times I execute apply from terraform cloud it always wants to update in-place. Nothing is changed from the code. It just want to change something. I have tried to check the raw log but I do not see what exactly it wants to change. Any idea? BELOW is the OUTPUT from PLAN # aws_elastic_beanstalk_environment.eb_env will be updated in-place ~ resource \"aws_elastic_beanstalk_environment\" \"eb_env\" { id                     = \"e-12313123\" name                   = \"dev-eb-env\" tags                   = {} # (20 unchanged attributes hidden) } # aws_elastic_beanstalk_environment.eb_v2_env will be updated in-place ~ resource \"aws_elastic_beanstalk_environment\" \"eb_v2_env\" { id                     = \"e-1dasfq2\" name                   = \"dev-eb-v2-env\" tags                   = {} # (20 unchanged attributes hidden) Using Terraform v1.12.2 but it happened as well using older version of terraform",
      "flair": [
        "AWS"
      ],
      "thumbnail_url": ""
    },
    {
      "title": "Nutanix VM automation with Terraform",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mv0oaa/nutanix_vm_automation_with_terraform/",
      "score": 2,
      "comments": 1,
      "post_id": "t3_1mv0oaa",
      "post_type": "crosspost",
      "domain": "reddit.com",
      "author": "visha29",
      "author_id": "t2_pm67w3p",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-20T00:55:28.086000+0000",
      "content_href": "/r/nutanix/comments/1mv0ljb/nutanix_vm_automation_with_terraform/",
      "content_preview": "",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_5.png"
    },
    {
      "title": "Automating a VPN?",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1muvxya/automating_a_vpn/",
      "score": 0,
      "comments": 7,
      "post_id": "t3_1muvxya",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "GodAtum",
      "author_id": "t2_haz0k",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-19T21:38:21.124000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1muvxya/automating_a_vpn/",
      "content_preview": "I have the TF for creating a WireGuard VPN AWS instance. But I don’t need to leave it on all the time and it’s a faff running it manually and I need to save time in the morning so I’m not late for work. Basically I want it to automatically run at 6am every morning and shutdown at 8am. I also want the client config automatically download to my MacBook so it’s ready to go when I wake up.",
      "flair": [
        "AWS"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_4.png"
    },
    {
      "title": "Why writing Terraform with AI agents sucks and what I'm doing about it.",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1msieme/why_writing_terraform_with_ai_agents_sucks_and/",
      "score": 0,
      "comments": 10,
      "post_id": "t3_1msieme",
      "post_type": "video",
      "domain": "v.redd.it",
      "author": "build-your-future",
      "author_id": "t2_dv7c1rec",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-17T05:21:47.126000+0000",
      "content_href": "https://v.redd.it/sgoy1cvelijf1",
      "content_preview": "",
      "flair": [
        "Azure"
      ],
      "thumbnail_url": "https://external-preview.redd.it/why-writing-terraform-with-ai-agents-sucks-and-what-im-v0-ZGZseTRidmVsaWpmMSKU47U3_LCDD63BNVayF-SDoMiDHQbhnSQvwn3sLa6I.png?width=640&crop=smart&format=pjpg&auto=webp&s=775260ea8db71b26e52c9471581886cb2f51354c"
    },
    {
      "title": "Atlantis and order_execution_group",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mr6sxj/atlantis_and_order_execution_group/",
      "score": 2,
      "comments": 5,
      "post_id": "t3_1mr6sxj",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "tech4981",
      "author_id": "t2_1sodcnw14p",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-15T18:53:29.143000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mr6sxj/atlantis_and_order_execution_group/",
      "content_preview": "I am trying to find a way to to chain multiple terraform applies together. So I was testing order_execution_group feature: I committed 3 diff root modules with different execution_order_groups it did 3 plans, but execution_order_group_2 and execution_order_group_3 failed as it needed resources from order_execution_group_1 I ran atlantis apply  and received \"Ran Apply for 0 projects\" So basically none of the terraform was applied. Which is making me wonder what's the point of order_execution_group if it can't execute terraform in sequence due to dependencies? Am I not using this as designed? projects:\n  - name: vpc\n    dir: vpc\n    workspace: vpc\n    execution_order_group: 1\n  - name: ec2\n    dir: ec2\n    workspace: ec2\n    execution_order_group: 2\n  - name: alb\n    dir: alb\n    workspace: alb\n    execution_order_group: 3",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_1.png"
    },
    {
      "title": "which resources i should use or how do i configure this part",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1n0hcl0/which_resources_i_should_use_or_how_do_i/",
      "score": 0,
      "comments": 9,
      "post_id": "t3_1n0hcl0",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "Consistent_Rate5421",
      "author_id": "t2_8kj2y66z",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-26T09:39:58.338000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1n0hcl0/which_resources_i_should_use_or_how_do_i/",
      "content_preview": "i have this assignment i configured the security group,nowi have to configure s3 and cloud watch access ● Define Security Groups (restrict ports properly). ● Create IAM role for EC2 (S3 + CloudWatch access). this is my current config resource \"aws_iam_role\" \"ec2_role\" {\n  name = var.name\n  assume_role_policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Effect = \"Allow\"\n        Principal = {\n          Service = \"ec2.amazonaws.com\"\n        }\n        Action = \"sts:AssumeRole\"\n      }\n    ]\n  })\n}\n\nresource \"aws_iam_role_policy_attachment\" \"s3_access\" {\n  role       = aws_iam_role.ec2_role.name\n  policy_arn = \"arn:aws:iam::aws:policy/AmazonS3FullAccess\"\n}\n\nresource \"aws_iam_role_policy_attachment\" \"cloudwatch_logs_access\" {\n  role       = aws_iam_role.ec2_role.name\n  policy_arn = \"arn:aws:iam::aws:policy/CloudWatchLogsFullAccess\"\n}\n\nresource \"aws_iam_role_policy_attachment\" \"cloudwatch_monitoring_access\" {\n  role       = aws_iam_role.ec2_role.name\n  policy_arn = \"arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy\"\n}\n\n\nvariable \"name\" {\n  type    = string\n  default = \"ec2-role\"\n}\n\n\noutput \"ec2_role_arn\" {\n  value = aws_iam_role.ec2_role.arn\n}\n\n\n\nresource \"aws_cloudwatch_log_group\" \"log_group\" {\n  name              = var.log_group_name\n  retention_in_days = var.retention_days\n}\n\nresource \"aws_cloudwatch_log_stream\" \"log_stream\" {\n  name           = \"my-log-stream\"\n  log_group_name = aws_cloudwatch_log_group.log_group.name\n}\n\n\nvariable \"log_group_name\" {\n  description = \"The name of the CloudWatch log group\"\n  type        = string\n  default     = \"my-log-group\"\n}\n\nvariable \"retention_days\" {\n  description = \"The number of days to retain the logs in the CloudWatch log group\"\n  type        = number\n  default     = 7\n}",
      "flair": [
        "AWS"
      ],
      "thumbnail_url": ""
    },
    {
      "title": "Organize by project or by service?",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1moh6st/organize_by_project_or_by_service/",
      "score": 1,
      "comments": 11,
      "post_id": "t3_1moh6st",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "krusty_palhaco",
      "author_id": "t2_etq0b68m9",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-12T18:44:29.449000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1moh6st/organize_by_project_or_by_service/",
      "content_preview": "Hi everyone, I’m still pretty new to Terraform, and my repo is getting out of hand way faster than I expected. I’m not sure how to keep it organized as it gets bigger. Right now it’s organized by projects: terraform/\n├── project_1/\n│   ├── resource1_service_1.tf\n│   ├── resource1_service_2.tf\n│   └── outputs.tf\n├── project_2/\n│   ├── resource2_service_1.tf\n│   ├── resource2_service_2.tf\n│   └── outputs.tf\n└── modules/\n    ├── service_1/\n    └── service_2/ But I’ve been thinking about switching to organizing it by service/tool instead, so that all resources for the same service are in one place, no matter which project they belong to: terraform/\n├── service_1/\n│   ├── resource1.tf\n│   └── resource2.tf\n├── service_2/\n│   ├── resource1.tf\n│   └── resource2.tf\n└── modules/\n    ├── service_1/\n    └── service_2/ In this “by service” approach, each project would add and edit its .tf files inside the corresponding service folder. This way, resource management for the same service is centralized, which I think could help avoid conflicts when similar resources are needed across multiple projects. On the other hand, I feel like implementing this would be a lot harder, especially for state management, CI/CD automation, and permissions. Has anyone here tried the “by service” structure in a growing repo? Is it a good idea? Thanks!",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": ""
    },
    {
      "title": "Organizing Terraform Configurations (Single-Instance vs. Multi-Instance Root Modules)",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mpc79j/organizing_terraform_configurations/",
      "score": 13,
      "comments": 0,
      "post_id": "t3_1mpc79j",
      "post_type": "link",
      "domain": "devopsdirective.com",
      "author": "maximumlengthusernam",
      "author_id": "t2_5brre",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-13T18:19:09.221000+0000",
      "content_href": "https://devopsdirective.com/posts/2025/07/organizing-terraform-configurations/",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_2.png"
    },
    {
      "title": "How to Manage Terraform State Using Terraform Cloud Enterprise?",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mxyleo/how_to_manage_terraform_state_using_terraform/",
      "score": 0,
      "comments": 7,
      "post_id": "t3_1mxyleo",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "DevRJCloud",
      "author_id": "t2_hoi8wqa2",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-23T11:07:45.476000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mxyleo/how_to_manage_terraform_state_using_terraform/",
      "content_preview": "Use Case:-   I’m working on a use case to implement Kafka cluster resources in Confluent Cloud using Terraform modules. As a first step, I need to configure the Terraform backend ( state files) in Terraform Cloud Enterprise. Could you please guide me on the correct steps or best practices to configure the backend in Terraform Cloud Enterprise? Additionally, how can I set up authentication between VS Code and the Terraform Cloud portal to store and manage the backend state? Any helpful references or suggestions would be greatly appreciated. Thank you!",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": ""
    },
    {
      "title": "☸️ looking for a production garde Terraform GKE module",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mmqbm6/looking_for_a_production_garde_terraform_gke/",
      "score": 0,
      "comments": 3,
      "post_id": "t3_1mmqbm6",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "Broke_DBA",
      "author_id": "t2_5g1ld126",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-10T18:37:54.302000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mmqbm6/looking_for_a_production_garde_terraform_gke/",
      "content_preview": "I’m looking for a Terraform GKE module that supports flag-based integration of core addons: CNI, Grafana, cert-manager, metrics-server, load balancer, CSI drivers, etc. With automatic role assignments (the basics for any production-grade setup) and best practice defaults. The reference on other Cloud providers (which I currently use) would be: Azure AKS azure verified module : https://registry.terraform.io/modules/Azure/avm-res-containerservice-managedcluster/azurerm AWS EKS blueprint : https://registry.terraform.io/modules/aws-ia/eks-blueprints-addons/aws All I found was basic modules on GCP repo and an archived project called gke-enterprise-mt Could you tell me if there is any GKE module stack that includes as ones mentioned above ? : Turnkey Add-on Management: pre-configured with recommended settings (with enable flags) Load Balancer Controller RBAC boundaries Observability tooling GCP curated best practices (e.g., logs, encryption, private networking). Better Alignment to CIS Benchmarks Thank you EDIT: sorry for the title typo I meant grade (can't change it)",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_6.png"
    },
    {
      "title": "Variable validation without invoking Terraform CLI?",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mltroj/variable_validation_without_invoking_terraform_cli/",
      "score": 0,
      "comments": 12,
      "post_id": "t3_1mltroj",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "honda_of_albania",
      "author_id": "t2_p5vrc",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-09T16:33:35.617000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mltroj/variable_validation_without_invoking_terraform_cli/",
      "content_preview": "I'm working on a terraform wrapper project. It inspects the `variable` blocks, presents the variables to the user as a web form, and then runs the project using the supplied information. Consider this example project: variable \"bucket_name\" {\n  type        = string\n  description = \"The name of the S3 bucket\"\n  validation {\n    condition     = can(regex(\"^[a-z0-9.-]{3,63}$\", var.name))\n    error_message = \"Bucket name must be 3-63 characters long, lowercase letters, numbers, dots, and hyphens only.\"\n  }\n}\n\nresource \"aws_s3_bucket\" \"this\" {\n  bucket = var.bucket_name\n} Of course, Terraform will validate the `bucket_name` variable's value, but I'd like to validate the user input with custom code, as the form is being filled, well before invoking Terraform CLI. Probably on the client side, in javascript. In a perfect world there would be a completely ignored meta-argument for every block that I could use however I like. I'd put validation rules in there: variable \"bucket_name\" {\n  type        = string\n  description = \"The name of the S3 bucket\"\n  validation {\n    condition     = can(regex(\"^[a-z0-9.-]{3,63}$\", var.name))\n    error_message = \"Bucket name must be 3-63 characters long, lowercase letters, numbers, dots, and hyphens only.\"\n  }\n  attribute_i_wish_existed_and_is_ignored_by_terraform = {\n    validations = [\n      {\n        regex_match = \"^[a-z0-9][a-z0-9.-]+$\"\n        error_message = \"Bucket name must begin with a lowercase letter or number and only  contain, lowercase letters, numbers, dots, and hyphens.\"\n      },\n      {\n        min_length = 3\n        error_message = \"Bucket name must contain at least 3 characters\"\n      },\n      {\n        max_length = 63\n        error_message = \"Bucket name must contain at most 63 characters\"\n      },\n    ]\n  }\n} I could probably find uses for the attribute_i_wish_existed_and_is_ignored_by_terraform meta-arguent in variable, resource, data, and output blocks. It's more useful than a comment because it's directly associated with the containing block and can be collected by an HCL parser. But I don't think it exists. My best idea for specifying variable validation rules in terraform-compatible HCL involves specifying them in a `locals` block which references the variables at issue: locals {\n  variable_validations = {\n    bucket_name = [\n      {\n        regex_match = \"^[a-z0-9][a-z0-9.-]+$\"\n        error_message = \"Bucket name must begin with a lowercase letter or number and only  contain, lowercase letters, numbers, dots, and hyphens.\"\n      },\n      {\n        min_length = 3\n        error_message = \"Bucket name must contain at least 3 characters\"\n      },\n      {\n        max_length = 63\n        error_message = \"Bucket name must contain at most 63 characters\"\n      },\n    ]\n  },\n} I'm hoping for better ideas. Thoughts?",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_0.png"
    },
    {
      "title": "Are we just being dumb about configuration drift?",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mw5fsn/are_we_just_being_dumb_about_configuration_drift/",
      "score": 0,
      "comments": 23,
      "post_id": "t3_1mw5fsn",
      "post_type": "multi_media",
      "domain": "self.Terraform",
      "author": "davletdz",
      "author_id": "t2_hae3u9j2",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-21T08:42:05.685000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mw5fsn/are_we_just_being_dumb_about_configuration_drift/",
      "content_preview": "I mean, I’ve lost count of how many times I’ve seen this happen. One of the most annoying things when working with Terraform, is that you can't push your CI/CD automated change, because someone introduced drift somewhere else. What's the industry’s go-to answer? “Don’t worry, just nuke it from orbit.” Midnight CI/CD apply , overwrite everything, pretend drift never happened. Like… is that really the best we’ve got? I feel like this approach misses nuance. What if this drift is a hotfix that kept prod alive at midnight. Sometimes it could be that the team is still half in ClickOps, half in IaC, and just trying to keep the lights on. So yeah, wiping drift feels \"pure\" and correct. But it’s also kind of rigid. And maybe even a little stupid, because it ignores how messy real-world engineering actually is. At Cloudgeni, we’ve been tinkering with the opposite: a back-sync. Instead of only forcing cloud to match IaC, we can also make IaC match what’s actually in the cloud. Basically, generating updated IaC that matches what’s actually in the cloud, down to modules and standards. Suddenly your Terraform files are back in sync with reality. https://preview.redd.it/are-we-just-being-dumb-about-configuration-drift-v0-pm24ip8v4ckf1.jpg Our customers like it. Often times also because it shows devs how little code is needed to make the changes they used to click through in the console. Drift stops being the bad guy and actually teaches and prepares for the final switch to IaC, while teams are scrambling and getting used to Terraform. Am I’m just coping? Maybe the old-school “overwrite and forget” approach is fine and we are introducing an anti-pattern. Open to interpretations here. So tell me: Are we overthinking drift? Is it smarter to just keep nuking it, or should we finally try to respect it? Asking for a friend. 👀",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": ""
    },
    {
      "title": "Azure service principal module",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mhsk2y/azure_service_principal_module/",
      "score": 0,
      "comments": 5,
      "post_id": "t3_1mhsk2y",
      "post_type": "multi_media",
      "domain": "self.Terraform",
      "author": "Unlikely-Ad4624",
      "author_id": "t2_vfpd19ap",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-04T22:56:28.495000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mhsk2y/azure_service_principal_module/",
      "content_preview": "Hello, I've built a Terraform module that provisions an Azure service principal with flexible authentication options such as OIDC, client secret, or certificate. It also deploys a Key Vault for secure storage of secrets and certificates. Optionally, the module can create a Storage Account, and it includes automatic role assignments for the service principal across your tenant. Check it out on GitHub and let me know what can be improved. Feedback is always welcome! https://github.com/mosowaz/terraform-azurerm-service-principal Thanks Edit: I have removed storage account and key vault. Thanks for your feedback",
      "flair": [
        "Azure"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_1.png"
    },
    {
      "title": "Best practice for managing ECR repo with Terraform — separate state file or same module?",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mh8av3/best_practice_for_managing_ecr_repo_with/",
      "score": 12,
      "comments": 7,
      "post_id": "t3_1mh8av3",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "Expensive_Test8661",
      "author_id": "t2_c25ek1gz0",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-04T08:56:00.040000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mh8av3/best_practice_for_managing_ecr_repo_with/",
      "content_preview": "Hey folks, I'm building a Terraform-managed AWS app and wondering about ECR repo management best practices. Would love to hear how you handle it. In my current setup, I have a main.tf under envs/prod/ which wires together all major components like: API Gateway Cognito (machine-to-machine auth) SQS (for async inference queue) Two Lambda functions (frontend + worker) ECR (used to store Lambda container images) Folder structure is pretty standard: terraform/\n├── envs/\n│   └── prod/\n│       ├── main.tf  # wires everything\n│       └── ...\n├── modules/\n│   ├── api-gateway/\n│   ├── cognito/\n│   ├── ecr/\n│   ├── frontend-lambda/\n│   ├── inference-sqs/\n│   └── worker-lambda/ What I'm doing today: ECR is created via modules/ecr and used as a prerequisite for my Lambda. I added this in the main stack alongside everything else. To avoid accidental deletion, I'm using: lifecycle {\n  prevent_destroy = true\n} Which works well — terraform destroy throws an error and spares the ECR. But… What I'm wondering: Should ECR be managed in a separate Terraform state? It’s foundational, kind of like infrastructure that changes very rarely If I keep it in the same stack, is prevent_destroy = true enough? I’m concerned someone doing terraform destroy might expect a full wipe But I don’t want to lose images or deal with restore headaches What would you do in production? Separate state files for base infra (e.g., VPC, ECR, KMS)? Or manage them together with other app-layer resources? Thanks 🙏",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_4.png"
    },
    {
      "title": "Best Terraform Exam Resources",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mf9t3t/best_terraform_exam_resources/",
      "score": 26,
      "comments": 1,
      "post_id": "t3_1mf9t3t",
      "post_type": "multi_media",
      "domain": "self.Terraform",
      "author": "AndroCentauri",
      "author_id": "t2_1ipq8wgdn7",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-01T22:09:57.921000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mf9t3t/best_terraform_exam_resources/",
      "content_preview": "Hi all, Below is a list of resources I used to pass the HashiCorp Certified: Terraform Associate (003) exam and wanted to give back by sharing the resources that helped me prepare. Hopefully this helps others who will be on the same path. 🎥 Free YouTube Learning Videos SuperInnovaTech: Terraform Associate 003 Exam Preparation - Provisioning a simple website on AWS with Terraform FreeCodeCamp: Full-length Terraform Associate Course (003) Cloud Champ: Practice Exam Questions walkthrough DevOps Directive: Complete Terraform Course 📘 Udemy Practice Exams Udemy Practice Exams by Muhammad Saad Sarwar Udemy Practice Exams by Bryan 🔗 Official Resource HashiCorp Certification Guide 💻 Hands-on Practice More than anything, spending time writing and applying Terraform configurations in a real or test environment (like AWS free tier) was key. The more you practice modules, backends, and state handling, the better. Once done, practice as much as you can with the Udemy practice exams mentioned above. 💡 Bonus Tip If you're picking up paid courses on Udemy like the above courses mentioned, look out for discount codes like AUG2025, AUG25 etc. depending on the month — they can help you save a bit. If you’ve got any other tips or resources that worked well for you, feel free to drop them in the comments. Good luck to anyone currently preparing — happy studying!!",
      "flair": [
        "AWS"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_3.png"
    },
    {
      "title": "Resources for AWS multi account setup",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mg1amw/resources_for_aws_multi_account_setup/",
      "score": 9,
      "comments": 11,
      "post_id": "t3_1mg1amw",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "jcbjoe",
      "author_id": "t2_8d0dn",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-02T21:06:06.870000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mg1amw/resources_for_aws_multi_account_setup/",
      "content_preview": "Hi everyone! I’m looking to move our workloads from the root account to separate accounts. Per workload per environment. Our Terraform right now is monolithic, written before I joined. It works but it’s slow. I’m going to be rewriting all the terraform from scratch and I want to make sure I get it correct. If anyone has any resources/documents/repos for folder structure/Terraform setup, AWS account baseline modules or CICD tools for Terraform I’d love to see them. I’ve seen Gruntwork and really like their repository of modules but it’s a bit pricey. I’ve also seen people mention AWS control tower for Terraform. Would love to hear thoughts on this too! Any advice or comments are highly appreciated!",
      "flair": [
        "AWS"
      ],
      "thumbnail_url": ""
    },
    {
      "title": "Best practice for importing and managing multiple CloudFront distributions in Terraform?",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mf58if/best_practice_for_importing_and_managing_multiple/",
      "score": 7,
      "comments": 3,
      "post_id": "t3_1mf58if",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "Next-Lengthiness2329",
      "author_id": "t2_mu3sc25gq",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-01T19:05:09.090000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mf58if/best_practice_for_importing_and_managing_multiple/",
      "content_preview": "I’m planning to import two existing AWS CloudFront distributions (created via the console) into my Terraform project. To manage them going forward, would it be better to: Create a single reusable module that supports defining multiple CloudFront distributions (possibly using for_each or a list of objects), or Write a wrapper configuration that simply calls the same CloudFront module twice , once for each distribution? Which approach is considered more maintainable in Terraform? I'd appreciate any suggestions or experiences you've had with similar use cases. Thanks!",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_2.png"
    },
    {
      "title": "What is the Best Practice for Storing Terraform Backend State for Confluent Cloud Resources?\n(GitHub vs Google Cloud Storage vs Azure Storage Bucket)",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mf4tyu/what_is_the_best_practice_for_storing_terraform/",
      "score": 4,
      "comments": 12,
      "post_id": "t3_1mf4tyu",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "DevRJCloud",
      "author_id": "t2_hoi8wqa2",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-01T18:49:44.255000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mf4tyu/what_is_the_best_practice_for_storing_terraform/",
      "content_preview": "Usecase: I am planning to implement Confluent Cloud Kafka Cluster resources with Terraform modules. Before establishing the environment hierarchy and provisioning resources in Confluent Cloud, I need to decide on the best backend option for storing the Terraform state file. Could you share best practices or recommendations for securely storing Terraform state in GitHub, Google Cloud Storage, or Azure Storage Bucket in this context?",
      "flair": [
        "GCP"
      ],
      "thumbnail_url": ""
    },
    {
      "title": "Migrating RDS instances to another DB engine?",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mey52n/migrating_rds_instances_to_another_db_engine/",
      "score": 3,
      "comments": 2,
      "post_id": "t3_1mey52n",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "OnShadowsWings",
      "author_id": "t2_918yf22",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-01T14:35:26.649000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mey52n/migrating_rds_instances_to_another_db_engine/",
      "content_preview": "Hi! We have an existing AWS RDS instance running SQL Server Enterprise edition, and we want to migrate to Standard Edition. When I look at our RDS module code in Terraform, the module itself also involves other resources like Cloudwatch Log Group, SSM parameter, and Secrets Manager entries. I think we have to create a new RDS instance with a temporary name first, and then rename the old/new RDS instances to retain the same endpoint. However, I'm at a loss on how it should be done in Terraform (or if there's anything I should do manually). Since those SSM/Secrets Manager entries are also being referenced in our ECS Fargate task definitions. How do you handle this scenario in your organization?",
      "flair": [
        "AWS"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_2.png"
    },
    {
      "title": "Terraform Up & Running Book",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mi35x8/terraform_up_running_book/",
      "score": 8,
      "comments": 8,
      "post_id": "t3_1mi35x8",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "sabrthor",
      "author_id": "t2_133uju",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-05T07:59:55.810000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mi35x8/terraform_up_running_book/",
      "content_preview": "My knowledge on terraform is at an intermediatory level. Recently, I went to a book fair and purchased Terraform Up & Running, 2nd Edition. Is that book any good? I know there's a 3rd Edition now. How different is 2nd edition from 3rd? The reason I bought the book is to enforce my learning and work on advanced features, which otherwise, I may be not aware of. I think the major difference would the tf version since 2nd edition is <0.12 I think and 3rd is >0.13. But anything other than that to throw me off the charts? Or should I rather purchase the 3rd version itself?",
      "flair": [
        "Discussion"
      ],
      "thumbnail_url": ""
    },
    {
      "title": "Terraform child and parent module version conflict error",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1mes27h/terraform_child_and_parent_module_version/",
      "score": 2,
      "comments": 5,
      "post_id": "t3_1mes27h",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "The-Wire0",
      "author_id": "t2_u2cgv1fb",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-01T09:38:11.131000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1mes27h/terraform_child_and_parent_module_version/",
      "content_preview": "I have a parent module that uses AWS provider and its version is set to 6.2.0 (exact version). It consumes a child module which has version specified as \">= 1.0.0\". Terraform refuses to run for some reason, citing Aws provider has no available releases that matches \">= 1.0.0, 6.2.0\". This seems confusing to me. EDIT - I solved the problem. Turns out AWS provider version 6.20.0 doesn't exist. I hate how it doesn't give me a useful error message but oh well .",
      "flair": [
        "Help Wanted"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_7.png"
    },
    {
      "title": "Can't create github organization environment variables nor secrets",
      "permalink": "https://www.reddit.com/r/Terraform/comments/1muhpg8/cant_create_github_organization_environment/",
      "score": 2,
      "comments": 6,
      "post_id": "t3_1muhpg8",
      "post_type": "text",
      "domain": "self.Terraform",
      "author": "These_Row_8448",
      "author_id": "t2_9eta0t1cw",
      "subreddit_id": "t5_2u8e4",
      "subreddit": "r/Terraform",
      "created_ts": "2025-08-19T12:58:50.405000+0000",
      "content_href": "https://www.reddit.com/r/Terraform/comments/1muhpg8/cant_create_github_organization_environment/",
      "content_preview": "Hello, I face an issue with the github provider: I'm connecting as a github organization through an installed Github App. However I get a 404 when setting repo's environment variables and secrets. \\\\ providers.tf\nterraform {\n  required_providers {\n    github = {\n      source  = \"integrations/github\"\n      version = \"6.6.0\"\n    }\n  }\n}\n\nprovider \"github\" {\n  owner = var.github_organization\n  app_auth {\n    id              = var.github_app_id              # or `GITHUB_APP_ID`\n    installation_id = var.github_app_installation_id # or `GITHUB_APP_INSTALLATION_ID`\n    pem_file        = file(var.github_app_pem_file)  # or `GITHUB_APP_PEM_FILE`\n  }\n}\n\n\n\n// main.tf\n// call to actions_environment_variables module\n# Resource to create a GitHub repository environment\nresource \"github_repository_environment\" \"this\" {\n  for_each            = local.environments\n  environment         = each.value.name\n  repository          = local.repo.name\n  prevent_self_review = each.value.prevent_self_review\n  wait_timer          = each.value.wait_timer\n  can_admins_bypass   = each.value.can_admins_bypass\n  dynamic \"reviewers\" {\n    for_each = toset(each.value.reviewers.enforce_reviewers ? [\"\"] : [])\n    content {\n      users = lookup(local.environment_reviewers, each.key)\n      teams = compact(lookup(local.environment_teams, each.key))\n    }\n  }\n  dynamic \"deployment_branch_policy\" {\n    for_each = toset(each.value.deployment_branch_policy.restrict_branches ? [\"\"] : [])\n    content {\n      protected_branches     = each.value.deployment_branch_policy.protected_branches\n      custom_branch_policies = each.value.deployment_branch_policy.custom_branch_policies\n    }\n  }\n  depends_on = [module.repo]\n}\n\n\n\n// actions_environment_variables module\nresource \"github_actions_environment_secret\" \"secret\" {\n  for_each        = tomap({ for secret in var.secrets : secret.name => secret.value })\n  secret_name     = each.key\n  plaintext_value = each.value\n  environment     = var.environment\n  repository      = var.repo_name\n}\n\nresource \"github_actions_environment_variable\" \"variable\" {\n  for_each      = tomap({ for _var in var.vars : _var.name => _var.value })\n  environment   = var.environment\n  variable_name = each.key\n  value         = each.value\n  repository    = var.repo_name\n} I'm getting this error: Error: POST https://api.github.com/repos/Gloweet/assistant-flows/environments/staging/variables: 404 Not Found []\n│\n│   with module.github_actions.module.actions_environment_variables[\"staging\"].github_actions_environment_variable.variable[\"terraform_workspace\"],\n│   on ../modules/actions_environment_variables/main.tf line 9, in resource \"github_actions_environment_variable\" \"variable\":\n│    9: resource \"github_actions_environment_variable\" \"variable\" { I don't think it's related to the environment existing or not, as I'm receiving the same error when setting secrets (not environment specific) Error: POST https://api.github.com/repos/Gloweet/assistant-flows/environments/staging/variables: 404 Not Found []\n│Error: POST https://api.github.com/repos/Gloweet/assistant-flows/environments/staging/variables: 404 Not Found []\n│ I have added all permissions to my github app All other operations work (creating the repo, creating a file, etc.). Even retrieving the repo works. data \"github_organization_teams\" \"all\" {}\n\ndata \"github_repository\" \"repository\" {\n  full_name = \"${var.repo.repo_org}/${var.repo.name}\"\n} I really don't understand why it's not working, I would really appreciate your help EDIT: I changed from a github app to a token authentication, it works now Thanks everyone",
      "flair": [
        "Help Wanted"
      ],
      "thumbnail_url": "https://styles.redditmedia.com/t5_8vvtgp/styles/profileIcon_cooo740sisff1.png?width=64&height=64&frame=1&auto=webp&crop=64%3A64%2Csmart&s=c508c91fa0091203c8cc0258cd11aa274de948ee"
    }
  ],
  "scraped_at": "2025-09-02T12:29:00.203592"
}