{
  "subreddit": "ruby",
  "url": "https://www.reddit.com/r/ruby",
  "meta": {
    "title": "reddit for rubyists"
  },
  "posts": [
    {
      "title": "MCP on Rails",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n6ne7s/mcp_on_rails/",
      "score": 4,
      "comments": 0,
      "post_id": "t3_1n6ne7s",
      "post_type": "link",
      "domain": "sinaptia.dev",
      "author": "sinaptia",
      "author_id": "t2_vlin6078",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-09-02T15:58:52.505000+0000",
      "content_href": "https://sinaptia.dev/posts/mcp-on-rails",
      "content_preview": "",
      "flair": [
        "Blog post"
      ],
      "thumbnail_url": ""
    },
    {
      "title": "Wubular: a browser-native (Ruby WebAssembly) clone of Rubular",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n0gztu/wubular_a_browsernative_ruby_webassembly_clone_of/",
      "score": 46,
      "comments": 9,
      "post_id": "t3_1n0gztu",
      "post_type": "link",
      "domain": "rubyelders.com",
      "author": "retro-rubies",
      "author_id": "t2_26h304zv",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-26T09:16:40.925000+0000",
      "content_href": "https://rubyelders.com/writings/2025-08-wubular-1.html",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://styles.redditmedia.com/t5_xu9kf/styles/profileIcon_f4ajegi4p3l21.jpg?width=64&height=64&frame=1&auto=webp&crop=64%3A64%2Csmart&s=55f5bf376f83c050f6ba58330eb3a5fd7a7d2c25"
    },
    {
      "title": "Rubycon – New Ruby Conference in Italy",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n6j15f/rubycon_new_ruby_conference_in_italy/",
      "score": 12,
      "comments": 1,
      "post_id": "t3_1n6j15f",
      "post_type": "text",
      "domain": "self.ruby",
      "author": "ACMECorp_dev",
      "author_id": "t2_qud6n1xr5",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-09-02T13:09:43.025000+0000",
      "content_href": "https://www.reddit.com/r/ruby/comments/1n6j15f/rubycon_new_ruby_conference_in_italy/",
      "content_preview": "Ehi everyone, I'm happy to announce that we're organizing Rubycon , a new Ruby conference in Italy. A fresh team of enthusiasts, a new name, and a new location: the stunning Hotel Ambasciatori in Rimini, just meters from the beach 🏖️ If you’ve never been, this is a great chance to visit Italy and enjoy our brand-new conference with lots of Italian folks! We’d love your feedback and suggestions! What do you want to see at Rubycon? We’re working hard to bring you interesting talks, great food (can we get it wrong in Italy?!), and awesome gadgets. 📅 When: 8 May 2026 📍 Where: Rimini, Hotel Ambasciatori 🌐 Stay updated: rubycon.it and follow us on our social media for any news or reaching out to us Hope to see you there! 🎉",
      "flair": [],
      "thumbnail_url": ""
    },
    {
      "title": "DragonRuby Game Toolkit: Reconstructing PlayStation 1 graphics, loading an OBJ file and rendering triangles. Source code in the comments.",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mjl070/dragonruby_game_toolkit_reconstructing/",
      "score": 70,
      "comments": 7,
      "post_id": "t3_1mjl070",
      "post_type": "video",
      "domain": "v.redd.it",
      "author": "amirrajan",
      "author_id": "t2_5ms07",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-07T00:01:53.708000+0000",
      "content_href": "https://v.redd.it/57w2xrzcnhhf1",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://styles.redditmedia.com/t5_3opr3/styles/profileIcon_ptrw52tp4xq81.jpg?width=64&height=64&frame=1&auto=webp&crop=64%3A64%2Csmart&s=75397e8ee46861339eecca5672404eaa5cc0e99f"
    },
    {
      "title": "Ruby Triathlon starts this week",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n6hs8j/ruby_triathlon_starts_this_week/",
      "score": 3,
      "comments": 0,
      "post_id": "t3_1n6hs8j",
      "post_type": "link",
      "domain": "notes.ghinda.com",
      "author": "lucianghinda",
      "author_id": "t2_rtp55xsc",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-09-02T12:12:12.776000+0000",
      "content_href": "https://notes.ghinda.com/post/ruby-triathlon-starts-this-week",
      "content_preview": "",
      "flair": [
        "Blog post"
      ],
      "thumbnail_url": "https://external-preview.redd.it/SgpEmDkX8EWyba1A-Trd4AzCAAjWLthPV-OFW0W29Qs.png?width=140&height=67&crop=140:67,smart&auto=webp&s=6c077412ebedc4fe05a60ba8d89dd6c6de860f26"
    },
    {
      "title": "DragonRuby Game Toolkit - Multi-orientation support with edge to edge rendering (cross-platform). Source code in the comments.",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n4g9py/dragonruby_game_toolkit_multiorientation_support/",
      "score": 37,
      "comments": 3,
      "post_id": "t3_1n4g9py",
      "post_type": "video",
      "domain": "v.redd.it",
      "author": "amirrajan",
      "author_id": "t2_5ms07",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-30T23:54:24.500000+0000",
      "content_href": "https://v.redd.it/z4ameocrv8mf1",
      "content_preview": "",
      "flair": [
        "Show /r/ruby"
      ],
      "thumbnail_url": "https://styles.redditmedia.com/t5_3opr3/styles/profileIcon_ptrw52tp4xq81.jpg?width=64&height=64&frame=1&auto=webp&crop=64%3A64%2Csmart&s=75397e8ee46861339eecca5672404eaa5cc0e99f"
    },
    {
      "title": "New Episode of Code and the Coding Coders who Code it! Episode 57 with Marco Roth",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n6hk03/new_episode_of_code_and_the_coding_coders_who/",
      "score": 3,
      "comments": 0,
      "post_id": "t3_1n6hk03",
      "post_type": "link",
      "domain": "podcast.drbragg.dev",
      "author": "DRBragg",
      "author_id": "t2_zcids",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-09-02T12:00:59.185000+0000",
      "content_href": "https://podcast.drbragg.dev/episodes/episode-57-marco-roth",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://external-preview.redd.it/O-MkRmZLiHfKWJCSF1qx79p0RvoiyOvIy60IJNVIEDM.jpeg?width=140&height=140&crop=140:140,smart&auto=webp&s=f8f0840fdf1acb2275300392005f3808d086fa06"
    },
    {
      "title": "Real Vs Synthetic/lab/fake",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n6cdi3/real_vs_syntheticlabfake/",
      "score": 0,
      "comments": 8,
      "post_id": "t3_1n6cdi3",
      "post_type": "gallery",
      "domain": "reddit.com",
      "author": "Forsaken_Cost_5514",
      "author_id": "t2_sgebnrmt",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-09-02T06:41:44.873000+0000",
      "content_href": "https://www.reddit.com/gallery/1n6cdi3",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_5.png"
    },
    {
      "title": "How I Made Ruby Faster than Ruby",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mtj7bx/how_i_made_ruby_faster_than_ruby/",
      "score": 52,
      "comments": 5,
      "post_id": "t3_1mtj7bx",
      "post_type": "link",
      "domain": "noteflakes.com",
      "author": "noteflakes",
      "author_id": "t2_ts8jq",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-18T11:20:30.977000+0000",
      "content_href": "https://noteflakes.com/articles/2025-08-18-how-to-make-ruby-faster",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_6.png"
    },
    {
      "title": "What do you think about my chess project?",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n6cf71/what_do_you_think_about_my_chess_project/",
      "score": 7,
      "comments": 9,
      "post_id": "t3_1n6cf71",
      "post_type": "multi_media",
      "domain": "self.ruby",
      "author": "Agile-Celery-2210",
      "author_id": "t2_iqw3vebf3",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-09-02T06:44:52.172000+0000",
      "content_href": "https://www.reddit.com/r/ruby/comments/1n6cf71/what_do_you_think_about_my_chess_project/",
      "content_preview": "Hi, there. So it works. I kind of implemented all of the necessary stuff. But i guess i am lacking an second opinion. And if you can take a look i would be very grateful. I would like to now if there is something i could do better and i didn't spot and if its worth investing some more time into it. Annnd did i used too much blocks? :D https://github.com/jaws-1684/chess",
      "flair": [],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_7.png"
    },
    {
      "title": "I just got my head straight on case/when, case/in, and =>. Maybe this will be useful for someone else.",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n2sp92/i_just_got_my_head_straight_on_casewhen_casein/",
      "score": 30,
      "comments": 8,
      "post_id": "t3_1n2sp92",
      "post_type": "link",
      "domain": "dogweather.dev",
      "author": "dogweather",
      "author_id": "t2_4emgi",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-29T00:14:01.845000+0000",
      "content_href": "https://dogweather.dev/2025/08/28/pattern-matching-in-ruby-a-wayfinder/",
      "content_preview": "",
      "flair": [
        "Blog post"
      ],
      "thumbnail_url": "https://external-preview.redd.it/M7j4ODa0JY1hHevB3KEbJqlIs2D1SrY6S3_QXyE5qEU.jpeg?width=140&height=140&crop=140:140,smart&auto=webp&s=d1da7476e4efde7d71a6a0581c8587998c4d3064"
    },
    {
      "title": "ActiveGenie",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n6365c/activegenie/",
      "score": 8,
      "comments": 0,
      "post_id": "t3_1n6365c",
      "post_type": "image",
      "domain": "i.redd.it",
      "author": "zroriz",
      "author_id": "t2_4mjc1mmgy",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-09-01T22:47:00.122000+0000",
      "content_href": "https://i.redd.it/vhf7nupxsmmf1.jpeg",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://styles.redditmedia.com/t5_97o1sk/styles/profileIcon_qz1sf1bap9af1.jpeg?width=64&height=64&frame=1&auto=webp&crop=64%3A64%2Csmart&s=01f2fb040bbb94aa4d3f10a50f73284740fc3170"
    },
    {
      "title": "Retiring Rack::BodyProxy — new post-response hook in Rack 3",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n5c98d/retiring_rackbodyproxy_new_postresponse_hook_in/",
      "score": 21,
      "comments": 1,
      "post_id": "t3_1n5c98d",
      "post_type": "multi_media",
      "domain": "self.ruby",
      "author": "LevelRelationship732",
      "author_id": "t2_cxyppin6",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-09-01T01:53:09.873000+0000",
      "content_href": "https://www.reddit.com/r/ruby/comments/1n5c98d/retiring_rackbodyproxy_new_postresponse_hook_in/",
      "content_preview": "For years, most of us writing Rails or Rack middleware have used Rack::BodyProxy to run cleanup code after a response. It worked, but it also brought some pain: extra allocations stacking up with every middleware, more GC churn under load, and misleading “time to last byte” metrics. Rack 3 now ships with rack.response_finished , a clean callback that runs exactly once after the response is truly done (when the last byte has left the socket). That means: accurate metrics, cleaner middleware stacks, and no more proxy nesting. I wrote a deep dive comparing old vs. new patterns, with code snippets and a migration guide for Rails apps: source Curious: has anyone here already migrated to rack.response_finished in production? How did it affect your metrics or middleware design?",
      "flair": [],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_2.png"
    },
    {
      "title": "Run JS from Ruby (with Node)",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n61fv0/run_js_from_ruby_with_node/",
      "score": 4,
      "comments": 0,
      "post_id": "t3_1n61fv0",
      "post_type": "multi_media",
      "domain": "self.ruby",
      "author": "danilo_barion",
      "author_id": "t2_8d1qq4g3",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-09-01T21:33:11.966000+0000",
      "content_href": "https://www.reddit.com/r/ruby/comments/1n61fv0/run_js_from_ruby_with_node/",
      "content_preview": "I've created this small repository to show some Ruby code I wrote to accomplish a specific task at work: https://github.com/danilobarion1986/js-from-ruby I hope it can help someone else as well. I'm also open to criticism, suggestions, and roasting in general :)",
      "flair": [],
      "thumbnail_url": ""
    },
    {
      "title": "What's wrong with the JSON gem API?",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mgbviq/whats_wrong_with_the_json_gem_api/",
      "score": 48,
      "comments": 2,
      "post_id": "t3_1mgbviq",
      "post_type": "link",
      "domain": "byroot.github.io",
      "author": "geospeck",
      "author_id": "t2_zmb2u",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-03T06:03:30.840000+0000",
      "content_href": "https://byroot.github.io/ruby/json/2025/08/02/whats-wrong-with-the-json-gem-api.html",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": ""
    },
    {
      "title": "The /o in Ruby regex stands for “oh the humanity!”",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mfyggq/the_o_in_ruby_regex_stands_for_oh_the_humanity/",
      "score": 44,
      "comments": 6,
      "post_id": "t3_1mfyggq",
      "post_type": "link",
      "domain": "jpcamara.com",
      "author": "f9ae8221b",
      "author_id": "t2_5zasd88i",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-02T19:03:22.783000+0000",
      "content_href": "https://jpcamara.com/2025/08/02/the-o-in-ruby-regex.html",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_2.png"
    },
    {
      "title": "What is the best book to master Ruby?",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n03094/what_is_the_best_book_to_master_ruby/",
      "score": 44,
      "comments": 27,
      "post_id": "t3_1n03094",
      "post_type": "text",
      "domain": "self.ruby",
      "author": "stejbak",
      "author_id": "t2_l7hgz43s",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-25T21:18:27.842000+0000",
      "content_href": "https://www.reddit.com/r/ruby/comments/1n03094/what_is_the_best_book_to_master_ruby/",
      "content_preview": "I program in Ruby for one year and would like to level up. I was thinking of reading „Eloquent Ruby” but it is from 2011. Would you still recommend it or I should go for something newer?",
      "flair": [],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_0.png"
    },
    {
      "title": "What you think about hiding instance variables internally in a class?",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n5pvzg/what_you_think_about_hiding_instance_variables/",
      "score": 12,
      "comments": 13,
      "post_id": "t3_1n5pvzg",
      "post_type": "text",
      "domain": "self.ruby",
      "author": "Altrooke",
      "author_id": "t2_13cgzj",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-09-01T14:16:42.147000+0000",
      "content_href": "https://www.reddit.com/r/ruby/comments/1n5pvzg/what_you_think_about_hiding_instance_variables/",
      "content_preview": "I’m close to completing one year as a Ruby dev next month. One of the reference books I was recommended at my job was POODR , which I read cover to cover. I loved it overall, but there’s one bit of advice from Chapter 2 that never sat right with me: always hide instance variables behind accessor methods, even internally in the same class. At the time I just accepted it, but a year later, I’m not so sure. The reasoning is that if you ever change where a variable comes from, you won’t have to refactor every @var reference. Fair enough. But in practice: The book oversells how big of a deal this is. Directly referencing an instance variable inside the class isn’t some massive code smell. Lots of devs half-follow this advice—wrapping vars in attr_reader but forgetting to mark them private , and accidentally make their internals public. I get that this ties into the “depend on behavior, not data” principle, which is great between classes. But Ruby already enforces that through encapsulation. Extending it to forbid instance variables inside a class maybe is overkill. So now I feel like the cost outweighs the benefit. It’s clever in theory, but in real-world Ruby, I’ve seen it cause more mess than it prevents. Is this a hot take? Curious if anyone else has had the same experience, or if you actually found this practice valuable over time?",
      "flair": [
        "Question"
      ],
      "thumbnail_url": ""
    },
    {
      "title": "Remote Ruby: Tidewave with José Valim",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n5nsa6/remote_ruby_tidewave_with_josé_valim/",
      "score": 3,
      "comments": 0,
      "post_id": "t3_1n5nsa6",
      "post_type": "link",
      "domain": "buzzsprout.com",
      "author": "andrewmcodes",
      "author_id": "t2_apvpdvmk",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-09-01T12:48:31.840000+0000",
      "content_href": "https://www.buzzsprout.com/2260490/episodes/17735828",
      "content_preview": "",
      "flair": [
        "Podcast"
      ],
      "thumbnail_url": "https://styles.redditmedia.com/t5_426npb/styles/profileIcon_lted7akze2ff1.png?width=64&height=64&frame=1&auto=webp&crop=64%3A64%2Csmart&s=9cf11aff5a0a9f764cf8f320a6e1fed681c5d67d"
    },
    {
      "title": "[Release] 🎥 LLMTape — record/replay real LLM calls in tests",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n5uk4v/release_llmtape_recordreplay_real_llm_calls_in/",
      "score": 6,
      "comments": 2,
      "post_id": "t3_1n5uk4v",
      "post_type": "multi_media",
      "domain": "self.ruby",
      "author": "IAmAM8",
      "author_id": "t2_9wo2co6j",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-09-01T17:12:45.138000+0000",
      "content_href": "https://www.reddit.com/r/ruby/comments/1n5uk4v/release_llmtape_recordreplay_real_llm_calls_in/",
      "content_preview": "Excited to announce LLMTape , a tiny Ruby DSL that wraps your LLM client. In test env it records “tapes” (YAML fixtures of real LLM responses) and then replays them on future runs, so CI stays fast, deterministic, and cheap. Dev/Prod remain passthrough —no recording or replay outside test. When a tape is stale, it’ll re-record it automatically or on demand. Why? Mocking the LLM often blinds you to real behavior. I wanted real end-to-end fixtures without hammering the API or burning tokens on every CI run. What it is: Think VCR, but for LLMs . A tiny wrapper + YAML tapes you can diff and review. What it isn’t: A policy engine or a prompt library. It’s just record/replay for tests. Any feedback is highly appreciated. Enjoy! https://github.com/amitleshed/LLMTape",
      "flair": [],
      "thumbnail_url": ""
    },
    {
      "title": "VS Code setup",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n48ahw/vs_code_setup/",
      "score": 6,
      "comments": 12,
      "post_id": "t3_1n48ahw",
      "post_type": "text",
      "domain": "self.ruby",
      "author": "FrankWilhoit",
      "author_id": "t2_b538nqkw",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-30T18:05:23.921000+0000",
      "content_href": "https://www.reddit.com/r/ruby/comments/1n48ahw/vs_code_setup/",
      "content_preview": "I am trying to set up VS Code with the Ruby LSP and VSCode rdbg Ruby Debugger extensions.  Everything \"works\" but debugging is impracticably slow, as in >= 10-20 seconds to single-step any line, even a trivial one.  Surely I have made some very simple and well-known beginners' mistake, but what?",
      "flair": [],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_0.png"
    },
    {
      "title": "dsa.rb: Practice core dsa in Ruby from the command line",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n1ifov/dsarb_practice_core_dsa_in_ruby_from_the_command/",
      "score": 6,
      "comments": 0,
      "post_id": "t3_1n1ifov",
      "post_type": "multi_media",
      "domain": "self.ruby",
      "author": "carter2099_",
      "author_id": "t2_1w0dnqvvfp",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-27T14:22:59.984000+0000",
      "content_href": "https://www.reddit.com/r/ruby/comments/1n1ifov/dsarb_practice_core_dsa_in_ruby_from_the_command/",
      "content_preview": "https://github.com/carter2099/dsa.rb I made a DSA practice tool for Ruby. It’s test-driven, runs locally, and is easy to extend with new exercises. Would love feedback on the interface and which problems to add next. The objective is to cement ability to implement core algorithms through repetition. This test suite is not like LeetCode. In fact, it’s more of a prerequisite to LeetCode. The test cases are not exhaustive in the spirit of checking for runtime performance, scalability, etc. Implementations are generalized, so that through practice using this tool, the user can begin avoiding having to think about the algorithmic pattern, and instead focus on its application to the problem at hand. It uses Minitest to test the user’s implementations, dynamically loaded at runtime.",
      "flair": [],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_5.png"
    },
    {
      "title": "Decided to make something simple and cool opensource!",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mwr5mw/decided_to_make_something_simple_and_cool/",
      "score": 7,
      "comments": 0,
      "post_id": "t3_1mwr5mw",
      "post_type": "link",
      "domain": "clashnewbme.itch.io",
      "author": "BornRoom257",
      "author_id": "t2_1803c9pxsc",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-21T23:48:36.705000+0000",
      "content_href": "https://clashnewbme.itch.io/beginner-ruby-animation-kit",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://external-preview.redd.it/Qh33JqEeeU9HyzkCMmG68Z2OCDrua4SM7CNSg6Z63yg.png?width=140&height=107&crop=140:107,smart&auto=webp&s=47f78c5cb9d9abdf8cb14da9acd30d6a0dd5b7f0"
    },
    {
      "title": "Which IDE(s) are you using?",
      "permalink": "https://www.reddit.com/r/ruby/comments/1min8pv/which_ides_are_you_using/",
      "score": 44,
      "comments": 79,
      "post_id": "t3_1min8pv",
      "post_type": "text",
      "domain": "self.ruby",
      "author": "patricide101",
      "author_id": "t2_1svs4zzhiq",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-05T22:19:37.495000+0000",
      "content_href": "https://www.reddit.com/r/ruby/comments/1min8pv/which_ides_are_you_using/",
      "content_preview": "I’m starting a new project and Sublime Text is feeling a bit … outdated. Being born in the same year as Unix I grew up on vi and later vim and gvim, but switched to TextMate upon first joining a Ruby team (heavily influenced by Ryan Bates) and then subsequently RubyMine and Sublime Text, depending on environment, but entirely ST for the last few years. In 2025, which IDEs do you love and why?",
      "flair": [
        "Question"
      ],
      "thumbnail_url": "https://styles.redditmedia.com/t5_evq7tv/styles/profileIcon_w1nigcsu7hdf1.png?width=64&height=64&frame=1&auto=webp&crop=64%3A64%2Csmart&s=8d9a15ab49c0c3e759e7810b269a23533c49a650"
    },
    {
      "title": "New Episode of Code and the Coding Coders who Code it! Episode 56 with Aji Slater",
      "permalink": "https://www.reddit.com/r/ruby/comments/1muhtre/new_episode_of_code_and_the_coding_coders_who/",
      "score": 5,
      "comments": 0,
      "post_id": "t3_1muhtre",
      "post_type": "link",
      "domain": "podcast.drbragg.dev",
      "author": "DRBragg",
      "author_id": "t2_zcids",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-19T13:03:34.405000+0000",
      "content_href": "https://podcast.drbragg.dev/episodes/episode-56-aji-slater",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": ""
    },
    {
      "title": "Ruby AI: Introducing Tidewave Web & Interview with José Valim",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n2nygs/ruby_ai_introducing_tidewave_web_interview_with/",
      "score": 19,
      "comments": 0,
      "post_id": "t3_1n2nygs",
      "post_type": "link",
      "domain": "rubyai.beehiiv.com",
      "author": "luckloot",
      "author_id": "t2_ki816hw",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-28T20:53:38.818000+0000",
      "content_href": "https://rubyai.beehiiv.com/p/ruby-ai-introducing-tidewave-interview-with-jos-valim",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_4.png"
    },
    {
      "title": "Rails Versions 7.1.5.2, 7.2.2.2, and 8.0.2.1 have been released!",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mpuy8q/rails_versions_7152_7222_and_8021_have_been/",
      "score": 43,
      "comments": 0,
      "post_id": "t3_1mpuy8q",
      "post_type": "link",
      "domain": "rubyonrails.org",
      "author": "amalinovic",
      "author_id": "t2_mxdry1j5",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-14T08:38:28.572000+0000",
      "content_href": "https://rubyonrails.org/2025/8/13/Rails-Versions-8-0-2-1-7-2-2-2-and-7-1-5-2-have-been-released",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://external-preview.redd.it/Bk3jnG8v44Djvl68tm5VY6vFdonkve5hFG7VE-jggcY.png?width=140&height=73&crop=140:73,smart&auto=webp&s=b0f6e99584019ec5232a3f20f4f3c9ab089dce46"
    },
    {
      "title": "60 Malicious Ruby Gems Used in Targeted Credential Theft Campaign",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mkp4tf/60_malicious_ruby_gems_used_in_targeted/",
      "score": 42,
      "comments": 5,
      "post_id": "t3_1mkp4tf",
      "post_type": "link",
      "domain": "socket.dev",
      "author": "amalinovic",
      "author_id": "t2_mxdry1j5",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-08T07:50:16.926000+0000",
      "content_href": "https://socket.dev/blog/60-malicious-ruby-gems-used-in-targeted-credential-theft-campaign",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": ""
    },
    {
      "title": "RubyGems Security Response to Socket.dev + How We Actually Protect the Ruby Ecosystem",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mzvju0/rubygems_security_response_to_socketdev_how_we/",
      "score": 40,
      "comments": 0,
      "post_id": "t3_1mzvju0",
      "post_type": "link",
      "domain": "blog.rubygems.org",
      "author": "mencio",
      "author_id": "t2_e62pk",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-25T16:39:41.022000+0000",
      "content_href": "https://blog.rubygems.org/2025/08/25/rubygems-security-response.html",
      "content_preview": "",
      "flair": [
        "Security"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_0.png"
    },
    {
      "title": "GitHub - isene/HyperList: A powerful Terminal User Interface (TUI) application for creating, editing, and managing HyperLists - a methodology for describing anything in a hierarchical, structured format.",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n32dyi/github_isenehyperlist_a_powerful_terminal_user/",
      "score": 1,
      "comments": 0,
      "post_id": "t3_1n32dyi",
      "post_type": "link",
      "domain": "github.com",
      "author": "isene",
      "author_id": "t2_73s3u",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-29T09:06:11.949000+0000",
      "content_href": "https://github.com/isene/HyperList",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://styles.redditmedia.com/t5_cp63y/styles/profileIcon_z3mrr1zcm9ma1.jpg?width=64&height=64&frame=1&auto=webp&crop=64%3A64%2Csmart&s=b09414d921396213859830bf47ac4922a6c3c1d0"
    },
    {
      "title": "Please try Puma 7.0.0.pre1",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mevdte/please_try_puma_700pre1/",
      "score": 46,
      "comments": 5,
      "post_id": "t3_1mevdte",
      "post_type": "link",
      "domain": "ruby.social",
      "author": "schneems",
      "author_id": "t2_63yf9",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-01T12:38:39.803000+0000",
      "content_href": "https://ruby.social/@Schneems/114950199356610804",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://styles.redditmedia.com/t5_1zd82p/styles/profileIcon_0pfkill37i061.jpeg?width=64&height=64&frame=1&auto=webp&crop=64%3A64%2Csmart&s=38b09f18cdf87aee6f14ef16d5781a90b8328f05"
    },
    {
      "title": "Why I'm taking events on the road this fall",
      "permalink": "https://www.reddit.com/r/ruby/comments/1meaxyk/why_im_taking_events_on_the_road_this_fall/",
      "score": 21,
      "comments": 5,
      "post_id": "t3_1meaxyk",
      "post_type": "link",
      "domain": "xoruby.com",
      "author": "jremsikjr",
      "author_id": "t2_38sgq",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-07-31T19:27:26.930000+0000",
      "content_href": "https://www.xoruby.com/blog/why-i-am-taking-events-on-the-road-this-fall/",
      "content_preview": "",
      "flair": [
        "Blog post"
      ],
      "thumbnail_url": "https://external-preview.redd.it/TV-irpQpK9f7cVO7WGOj-fx0OfoxX4B-9paeyLmhGI4.jpeg?width=140&height=92&crop=140:92,smart&auto=webp&s=8daa93caff3ceba8c295b8c5592da759f732f80b"
    },
    {
      "title": "Astronoby v0.8.0",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n5kb0f/astronoby_v080/",
      "score": 19,
      "comments": 0,
      "post_id": "t3_1n5kb0f",
      "post_type": "link",
      "domain": "github.com",
      "author": "rhannequin",
      "author_id": "t2_v54z5o9pd",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-09-01T09:38:02.446000+0000",
      "content_href": "https://github.com/rhannequin/astronoby/releases/tag/v0.8.0",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://styles.redditmedia.com/t5_awbas7/styles/profileIcon_wgx9amvwhalc1.jpg?width=64&height=64&frame=1&auto=webp&crop=64%3A64%2Csmart&s=b474c8849a86e29d9271969c24458e9546fd4fd5"
    },
    {
      "title": "I hate being a vibecoder but AI keep tempting me",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n31ggu/i_hate_being_a_vibecoder_but_ai_keep_tempting_me/",
      "score": 0,
      "comments": 3,
      "post_id": "t3_1n31ggu",
      "post_type": "crosspost",
      "domain": "reddit.com",
      "author": "Icy-Supermarket-6442",
      "author_id": "t2_ichsr038",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-29T08:05:07.556000+0000",
      "content_href": "/r/webdev/comments/1n31em3/i_hate_being_a_vibecoder_but_ai_keep_tempting_me/",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_4.png"
    },
    {
      "title": "Hokusai Native - Embedded Ruby GUIs for Mac and Linux",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mw6xu5/hokusai_native_embedded_ruby_guis_for_mac_and/",
      "score": 39,
      "comments": 5,
      "post_id": "t3_1mw6xu5",
      "post_type": "link",
      "domain": "github.com",
      "author": "zer0-st4rs",
      "author_id": "t2_1kxq2tz8vt",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-21T10:15:21.689000+0000",
      "content_href": "https://github.com/skinnyjames/hokusai-native-builder",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_1.png"
    },
    {
      "title": "That's not refactoring",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mvf4w9/thats_not_refactoring/",
      "score": 33,
      "comments": 24,
      "post_id": "t3_1mvf4w9",
      "post_type": "link",
      "domain": "codewithjason.com",
      "author": "jasonswett",
      "author_id": "t2_70372",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-20T13:41:28.245000+0000",
      "content_href": "https://www.codewithjason.com/thats-not-refactoring/",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://styles.redditmedia.com/t5_bzcrx/styles/profileIcon_2f8xwjdbps591.png?width=64&height=64&frame=1&auto=webp&crop=64%3A64%2Csmart&s=1d6042286c84eb53b1f94501ce1a26510d67a319"
    },
    {
      "title": "A new Slim language extension for Visual Studio Code (and derivatives)",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n1b7dl/a_new_slim_language_extension_for_visual_studio/",
      "score": 19,
      "comments": 1,
      "post_id": "t3_1n1b7dl",
      "post_type": "text",
      "domain": "self.ruby",
      "author": "FuturesBrightDavid",
      "author_id": "t2_rs4gwahri",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-27T08:13:22.150000+0000",
      "content_href": "https://www.reddit.com/r/ruby/comments/1n1b7dl/a_new_slim_language_extension_for_visual_studio/",
      "content_preview": "Hey Rubyists.  When I switched from RubyMine to Cursor a year ago, I found one thing I that I really missed, and that was a decent Slim language extension.  There were a couple of options, but they missed a lot of important functionality, like being able to auto-format a document, or an outline view. So I decided to make my own extension.  If you use Slim templates on your Rails application, and you use VSC (or one of the IDEs forked from VSC like Cursor or WindSurf) then check it out. https://open-vsx.org/extension/opensourceame/slim-vscode-extension",
      "flair": [],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_6.png"
    },
    {
      "title": "Introducing Top Secret",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mwtkwt/introducing_top_secret/",
      "score": 31,
      "comments": 1,
      "post_id": "t3_1mwtkwt",
      "post_type": "link",
      "domain": "thoughtbot.com",
      "author": "stevepolitodesign",
      "author_id": "t2_utuatyxi",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-22T01:40:07.693000+0000",
      "content_href": "https://thoughtbot.com/blog/top-secret",
      "content_preview": "",
      "flair": [
        "Show /r/ruby"
      ],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_6.png"
    },
    {
      "title": "How Judoscale's Utilization-Based Autoscaling Works",
      "permalink": "https://www.reddit.com/r/ruby/comments/1me3t9i/how_judoscales_utilizationbased_autoscaling_works/",
      "score": 13,
      "comments": 0,
      "post_id": "t3_1me3t9i",
      "post_type": "link",
      "domain": "judoscale.com",
      "author": "amalinovic",
      "author_id": "t2_mxdry1j5",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-07-31T14:57:25.768000+0000",
      "content_href": "https://judoscale.com/blog/how-utilization-works",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://external-preview.redd.it/CYKymnZwVkL_ln9fmKEmxEUnJr-lMWInFl-FyVd3Gyo.png?width=140&height=73&crop=140:73,smart&auto=webp&s=e15629513b63d9766d9ab3ffc69f3ff56cd3d2f3"
    },
    {
      "title": "railsjazz/rails_charts: Rails Charts using eCharts from Apache",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mtgrox/railsjazzrails_charts_rails_charts_using_echarts/",
      "score": 27,
      "comments": 2,
      "post_id": "t3_1mtgrox",
      "post_type": "link",
      "domain": "github.com",
      "author": "amalinovic",
      "author_id": "t2_mxdry1j5",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-18T09:00:49.257000+0000",
      "content_href": "https://github.com/railsjazz/rails_charts",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://external-preview.redd.it/aHVjuc7KtuEYs-vLeLK0gW1EhjLmTgNIB_1pfzQVQTw.jpeg?width=140&height=93&crop=140:93,smart&auto=webp&s=46ffd64b647d0c154d98ca73fb717ece260f5771"
    },
    {
      "title": "Static Site Generators - anyone still using middleman?",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n50zaj/static_site_generators_anyone_still_using/",
      "score": 17,
      "comments": 18,
      "post_id": "t3_1n50zaj",
      "post_type": "text",
      "domain": "self.ruby",
      "author": "jacob-indie",
      "author_id": "t2_16t7wjdlb5",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-31T17:41:39.374000+0000",
      "content_href": "https://www.reddit.com/r/ruby/comments/1n50zaj/static_site_generators_anyone_still_using/",
      "content_preview": "To create static pages (not necessarily blogs) I often resort to Middleman and am super happy with it. But sometimes I’m wondering if anyone is still using it? What else are you using? Also, there are no Google hits regarding deploying it with kamal which would be interesting alongside rails apps on the same VM (natively as opposed to just hosting a static page). How do you deploy static pages with kamal?",
      "flair": [],
      "thumbnail_url": ""
    },
    {
      "title": "Serviz - Command object Interface for Ruby",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n0oew7/serviz_command_object_interface_for_ruby/",
      "score": 17,
      "comments": 15,
      "post_id": "t3_1n0oew7",
      "post_type": "multi_media",
      "domain": "self.ruby",
      "author": "markets86",
      "author_id": "t2_ig171",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-26T15:08:28.214000+0000",
      "content_href": "https://www.reddit.com/r/ruby/comments/1n0oew7/serviz_command_object_interface_for_ruby/",
      "content_preview": "Hello Rubysts 👋, I just released a new version of the Serviz gem ( https://github.com/markets/serviz ). This new release includes support for \"Workflows\" ( https://github.com/markets/serviz#workflows ). A class that allows you to compose multiple service objects together using a clean, declarative DSL for orchestrating complex multi-step operations, with \"result chaining\" and \"error accumulation\": https://preview.redd.it/serviz-command-object-interface-for-ruby-v0-ku14ee5dqdlf1.png",
      "flair": [],
      "thumbnail_url": "https://styles.redditmedia.com/t5_d71el/styles/profileIcon_xj9ow38i4i581.png?width=64&height=64&frame=1&auto=webp&crop=64%3A64%2Csmart&s=5e1c828db8df20940df68b244a53d91ad220606f"
    },
    {
      "title": "Use Inertia.js + Rails to build modern JavaScript components and client-side interactivity (without typical SPA complexity)",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mdegy3/use_inertiajs_rails_to_build_modern_javascript/",
      "score": 17,
      "comments": 3,
      "post_id": "t3_1mdegy3",
      "post_type": "link",
      "domain": "evl.ms",
      "author": "Travis-Turner",
      "author_id": "t2_liksjb6",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-07-30T18:30:45.116000+0000",
      "content_href": "http://Evl.ms/chronicles/simplicity-vanished-solving-the-mystery-with-inertia-js-and-rails?q=1",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": "https://external-preview.redd.it/Rkc19lqqvt8I6bGWYeFC0QshBYBsbwiHbfy-CNtYSpw.jpeg?width=140&height=73&crop=140:73,smart&auto=webp&s=9cdb785c9296efff89de9f0807780d35551beff7"
    },
    {
      "title": "Remote Ruby: Sabbaticals, Pagination Gems, Streaming Controllers, and Rails World Prep 🎙️",
      "permalink": "https://www.reddit.com/r/ruby/comments/1n01gbj/remote_ruby_sabbaticals_pagination_gems_streaming/",
      "score": 8,
      "comments": 0,
      "post_id": "t3_1n01gbj",
      "post_type": "crosspost",
      "domain": "buzzsprout.com",
      "author": "andrewmcodes",
      "author_id": "t2_apvpdvmk",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-25T20:19:35.552000+0000",
      "content_href": "/r/rails/comments/1n01g0x/remote_ruby_sabbaticals_pagination_gems_streaming/",
      "content_preview": "",
      "flair": [
        "Podcast"
      ],
      "thumbnail_url": "https://styles.redditmedia.com/t5_426npb/styles/profileIcon_lted7akze2ff1.png?width=64&height=64&frame=1&auto=webp&crop=64%3A64%2Csmart&s=9cf11aff5a0a9f764cf8f320a6e1fed681c5d67d"
    },
    {
      "title": "RubyLLM 1.4.0: Structured Output, Custom Parameters, and Rails Generators",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mdal28/rubyllm_140_structured_output_custom_parameters/",
      "score": 21,
      "comments": 1,
      "post_id": "t3_1mdal28",
      "post_type": "multi_media",
      "domain": "self.ruby",
      "author": "crmne",
      "author_id": "t2_f9ck0",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-07-30T16:05:17.669000+0000",
      "content_href": "https://www.reddit.com/r/ruby/comments/1mdal28/rubyllm_140_structured_output_custom_parameters/",
      "content_preview": "Hey Rubyists! Just shipped RubyLLM 1.4.0 with some major quality-of-life improvements. Highlights: 🎯 Structured Output - Define schemas, get guaranteed JSON structure: class PersonSchema < RubyLLM::Schema\n  string :name\n  integer :age\nend\n\nchat.with_schema(PersonSchema).ask(\"Generate a developer\")\n# Always returns {\"name\" => \"...\", \"age\" => ...} 🛠️ with_params() - Direct access to provider-specific params without workarounds 🚄 Rails Generator - Creates proper migrations, models with acts_as_chat, and a sensible initializer 🔍 Tool Callbacks - See what tools your AI is calling with on_tool_call Plus: GPUStack support, raw Faraday responses, Anthropic bug fixes, and more. Full release notes: https://github.com/crmne/ruby_llm/releases/tag/1.4.0 Gem: https://rubygems.org/gems/ruby_llm",
      "flair": [
        "Show /r/ruby"
      ],
      "thumbnail_url": "https://styles.redditmedia.com/t5_d72lb/styles/profileIcon_ar3r6qqg1yjd1.png?width=64&height=64&frame=1&auto=webp&crop=64%3A64%2Csmart&s=c1068fda94bdaad0bdd0848ae461d3982303cf38"
    },
    {
      "title": "Short Ruby Newsletter - edition 147",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mztfax/short_ruby_newsletter_edition_147/",
      "score": 8,
      "comments": 2,
      "post_id": "t3_1mztfax",
      "post_type": "link",
      "domain": "newsletter.shortruby.com",
      "author": "lucianghinda",
      "author_id": "t2_rtp55xsc",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-25T15:21:50.636000+0000",
      "content_href": "https://newsletter.shortruby.com/p/edition-147",
      "content_preview": "",
      "flair": [
        "Blog post"
      ],
      "thumbnail_url": "https://external-preview.redd.it/ZTz9ZIyRVCSxut-q_nHhag90Je3fn6N_Q68rcm9aaH8.png?width=140&height=73&crop=140:73,smart&auto=webp&s=0bf36ea7ae6f611920df001c4e2e3accc58b0333"
    },
    {
      "title": "Git-based feature flags management tool supporting Ruby",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mz3ik7/gitbased_feature_flags_management_tool_supporting/",
      "score": 11,
      "comments": 2,
      "post_id": "t3_1mz3ik7",
      "post_type": "multi_media",
      "domain": "self.ruby",
      "author": "fahad19",
      "author_id": "t2_35xfn",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-24T18:33:12.441000+0000",
      "content_href": "https://www.reddit.com/r/ruby/comments/1mz3ik7/gitbased_feature_flags_management_tool_supporting/",
      "content_preview": "hi folks, creator of https://github.com/featurevisor/featurevisor here. an open source Git-based feature flags and remote configuration management tool, allowing you to fully own the entire stack. been developing it for a few years, and now it supports Ruby too via a new Ruby SDK: https://featurevisor.com/docs/sdks/ruby/ if you have requirements for gradual percentage based rollout, a/b testing with different cohorts of your audience, and complex targeting conditions, this tool can be valuable for you. the workflow can be highly summarized as follows: - manage feature configurations in a Featurevisor project: https://featurevisor.com/docs/projects/ - build and upload datafiles (static JSON files) to CDN or keep them along with your Ruby applications: https://featurevisor.com/docs/building-datafiles/ - fetch and consume datafiles using provided SDKs to evaluate values in app runtime if you have any use cases that it cannot meet yet, would love to know so I can help support them in future. thanks!",
      "flair": [],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_3.png"
    },
    {
      "title": "RubyMine 2025.2",
      "permalink": "https://www.reddit.com/r/ruby/comments/1midgkh/rubymine_20252/",
      "score": 27,
      "comments": 4,
      "post_id": "t3_1midgkh",
      "post_type": "multi_media",
      "domain": "self.ruby",
      "author": "True_Criticism6794",
      "author_id": "t2_qix7xx44",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-05T16:13:16.099000+0000",
      "content_href": "https://www.reddit.com/r/ruby/comments/1midgkh/rubymine_20252/",
      "content_preview": "Support for Junie, the JetBrains AI coding agent; AI-based code completion for ERB templates; faster Rails project startup; enhanced Bundler management; hover hints for RBS, and more: https://blog.jetbrains.com/ruby/2025/08/rubymine-2025-2-junie-and-ai-assistant-upgrades-faster-rails-project-startup-enhanced-bundler-management-and-more/",
      "flair": [],
      "thumbnail_url": "https://www.redditstatic.com/avatars/defaults/v2/avatar_default_4.png"
    },
    {
      "title": "Help!Check the post generation",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mxaxao/helpcheck_the_post_generation/",
      "score": 0,
      "comments": 0,
      "post_id": "t3_1mxaxao",
      "post_type": "crosspost",
      "domain": "reddit.com",
      "author": "Rayman_666",
      "author_id": "t2_1fozcfr07g",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-22T16:18:10.755000+0000",
      "content_href": "/r/Jekyll/comments/1mx9mj6/helpcheck_the_post_generation/",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": ""
    },
    {
      "title": "Token Ruby - Issue 3",
      "permalink": "https://www.reddit.com/r/ruby/comments/1mw2qcc/token_ruby_issue_3/",
      "score": 4,
      "comments": 0,
      "post_id": "t3_1mw2qcc",
      "post_type": "link",
      "domain": "tokenruby.com",
      "author": "yatish27",
      "author_id": "t2_eea73",
      "subreddit_id": "t5_2qh21",
      "subreddit": "r/ruby",
      "created_ts": "2025-08-21T05:52:20.635000+0000",
      "content_href": "https://tokenruby.com/issues/token-ruby-3-zed-claude-and-a-timed-lockbox",
      "content_preview": "",
      "flair": [],
      "thumbnail_url": ""
    }
  ],
  "scraped_at": "2025-09-02T11:17:22.811901"
}